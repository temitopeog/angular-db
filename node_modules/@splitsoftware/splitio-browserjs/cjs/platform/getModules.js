"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getModules = void 0;
var splitApi_1 = require("@splitsoftware/splitio-commons/cjs/services/splitApi");
var syncManagerOnline_1 = require("@splitsoftware/splitio-commons/cjs/sync/syncManagerOnline");
var pushManager_1 = require("@splitsoftware/splitio-commons/cjs/sync/streaming/pushManager");
var pollingManagerCS_1 = require("@splitsoftware/splitio-commons/cjs/sync/polling/pollingManagerCS");
var index_1 = require("@splitsoftware/splitio-commons/cjs/sdkManager/index");
var sdkClientMethodCS_1 = require("@splitsoftware/splitio-commons/cjs/sdkClient/sdkClientMethodCS");
var browser_1 = require("@splitsoftware/splitio-commons/cjs/listeners/browser");
var impressionObserverCS_1 = require("@splitsoftware/splitio-commons/cjs/trackers/impressionObserver/impressionObserverCS");
var pluggable_1 = require("@splitsoftware/splitio-commons/cjs/integrations/pluggable");
var utils_1 = require("@splitsoftware/splitio-commons/cjs/trackers/impressionObserver/utils");
var constants_1 = require("@splitsoftware/splitio-commons/cjs/utils/constants");
var sdkUserConsent_1 = require("@splitsoftware/splitio-commons/cjs/consent/sdkUserConsent");
var syncManagerStandaloneFactory;
var syncManagerSubmittersFactory;
function getModules(settings, platform) {
    if (!syncManagerStandaloneFactory)
        syncManagerStandaloneFactory = (0, syncManagerOnline_1.syncManagerOnlineFactory)(pollingManagerCS_1.pollingManagerCSFactory, pushManager_1.pushManagerFactory);
    var modules = {
        settings: settings,
        platform: platform,
        storageFactory: settings.storage,
        splitApiFactory: splitApi_1.splitApiFactory,
        syncManagerFactory: syncManagerStandaloneFactory,
        sdkManagerFactory: index_1.sdkManagerFactory,
        sdkClientMethodFactory: sdkClientMethodCS_1.sdkClientMethodCSFactory,
        SignalListener: browser_1.BrowserSignalListener,
        integrationsManagerFactory: settings.integrations && settings.integrations.length > 0 ? pluggable_1.pluggableIntegrationsManagerFactory.bind(null, settings.integrations) : undefined,
        impressionsObserverFactory: (0, utils_1.shouldAddPt)(settings) ? impressionObserverCS_1.impressionObserverCSFactory : undefined,
        extraProps: function (params) {
            return {
                UserConsent: (0, sdkUserConsent_1.createUserConsentAPI)(params)
            };
        },
    };
    switch (settings.mode) {
        case constants_1.LOCALHOST_MODE:
            modules.splitApiFactory = undefined;
            modules.syncManagerFactory = settings.sync.localhostMode;
            modules.SignalListener = undefined;
            break;
        case constants_1.CONSUMER_MODE:
            modules.syncManagerFactory = undefined;
            break;
        case constants_1.CONSUMER_PARTIAL_MODE:
            if (!syncManagerSubmittersFactory)
                syncManagerSubmittersFactory = (0, syncManagerOnline_1.syncManagerOnlineFactory)(undefined, undefined);
            modules.syncManagerFactory = syncManagerSubmittersFactory;
    }
    return modules;
}
exports.getModules = getModules;
