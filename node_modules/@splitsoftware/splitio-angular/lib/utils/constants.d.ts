/**
 * SDK constant for control treatment
 */
export declare const CONTROL = "control";
/**
 * string constant for observable to return when client exists for a key
 */
export declare const INIT_CLIENT_EXISTS = "init::clientExists";
/**
 * string constant for observable to return when client is not initialized
 */
export declare const INIT_CLIENT_FIRST = "init::clientFirst";
export declare const VERSION: string;
/**
 * client with methods that return default values
 */
export declare const CONTROL_CLIENT: {
    getTreatment: () => string;
    getTreatmentWithConfig: () => {
        treatment: string;
        config: any;
    };
    getTreatments: (splitNames: string[]) => {};
    getTreatmentsWithConfig: (splitNames: string[]) => {};
    track: () => boolean;
};
/**
 *  with methods that return default values
 */
export declare const DEFAULT_MANAGER: {
    splits: () => any[];
    split: () => any;
    names: () => any[];
};
