{"ast":null,"code":"// time for refresh token\nexport var SECONDS_BEFORE_EXPIRATION = 600;\n// Internal SDK events, subscribed by SyncManager and PushManager\n/**\n * emitted on SSE and Authenticate non-recoverable errors, STREAMING_DISABLED control notification and authentication with pushEnabled false\n * triggers `handleNonRetryableError` call\n */\nexport var PUSH_NONRETRYABLE_ERROR = 'PUSH_NONRETRYABLE_ERROR';\n/**\n * emitted on SSE and Authenticate recoverable errors\n * triggers `handleRetryableError` call\n */\nexport var PUSH_RETRYABLE_ERROR = 'PUSH_RETRYABLE_ERROR';\n/**\n * emitted on STREAMING_RESUMED control notification, OCCUPANCY different than 0, and SSE onopen event\n * triggers `stopPollingAndSyncAll` call\n */\nexport var PUSH_SUBSYSTEM_UP = 'PUSH_SUBSYSTEM_UP';\n/**\n * emitted on STREAMING_PAUSED control notification, OCCUPANCY equal to 0, PUSH_NONRETRYABLE_ERROR and PUSH_RETRYABLE_ERROR events.\n * triggers `startPolling` and `stopWorkers` calls\n */\nexport var PUSH_SUBSYSTEM_DOWN = 'PUSH_SUBSYSTEM_DOWN';\n// Update-type push notifications, handled by NotificationProcessor\nexport var MY_SEGMENTS_UPDATE = 'MY_SEGMENTS_UPDATE';\nexport var MY_SEGMENTS_UPDATE_V2 = 'MY_SEGMENTS_UPDATE_V2';\nexport var SEGMENT_UPDATE = 'SEGMENT_UPDATE';\nexport var SPLIT_KILL = 'SPLIT_KILL';\nexport var SPLIT_UPDATE = 'SPLIT_UPDATE';\n// Control-type push notifications, handled by NotificationKeeper\nexport var CONTROL = 'CONTROL';\nexport var OCCUPANCY = 'OCCUPANCY';\nexport var ControlType;\n(function (ControlType) {\n  ControlType[\"STREAMING_DISABLED\"] = \"STREAMING_DISABLED\";\n  ControlType[\"STREAMING_PAUSED\"] = \"STREAMING_PAUSED\";\n  ControlType[\"STREAMING_RESUMED\"] = \"STREAMING_RESUMED\";\n  ControlType[\"STREAMING_RESET\"] = \"STREAMING_RESET\";\n})(ControlType || (ControlType = {}));","map":{"version":3,"names":["SECONDS_BEFORE_EXPIRATION","PUSH_NONRETRYABLE_ERROR","PUSH_RETRYABLE_ERROR","PUSH_SUBSYSTEM_UP","PUSH_SUBSYSTEM_DOWN","MY_SEGMENTS_UPDATE","MY_SEGMENTS_UPDATE_V2","SEGMENT_UPDATE","SPLIT_KILL","SPLIT_UPDATE","CONTROL","OCCUPANCY","ControlType"],"sources":["/Users/temitopeogunrekun/Desktop/angular-db/node_modules/@splitsoftware/splitio-commons/esm/sync/streaming/constants.js"],"sourcesContent":["// time for refresh token\nexport var SECONDS_BEFORE_EXPIRATION = 600;\n// Internal SDK events, subscribed by SyncManager and PushManager\n/**\n * emitted on SSE and Authenticate non-recoverable errors, STREAMING_DISABLED control notification and authentication with pushEnabled false\n * triggers `handleNonRetryableError` call\n */\nexport var PUSH_NONRETRYABLE_ERROR = 'PUSH_NONRETRYABLE_ERROR';\n/**\n * emitted on SSE and Authenticate recoverable errors\n * triggers `handleRetryableError` call\n */\nexport var PUSH_RETRYABLE_ERROR = 'PUSH_RETRYABLE_ERROR';\n/**\n * emitted on STREAMING_RESUMED control notification, OCCUPANCY different than 0, and SSE onopen event\n * triggers `stopPollingAndSyncAll` call\n */\nexport var PUSH_SUBSYSTEM_UP = 'PUSH_SUBSYSTEM_UP';\n/**\n * emitted on STREAMING_PAUSED control notification, OCCUPANCY equal to 0, PUSH_NONRETRYABLE_ERROR and PUSH_RETRYABLE_ERROR events.\n * triggers `startPolling` and `stopWorkers` calls\n */\nexport var PUSH_SUBSYSTEM_DOWN = 'PUSH_SUBSYSTEM_DOWN';\n// Update-type push notifications, handled by NotificationProcessor\nexport var MY_SEGMENTS_UPDATE = 'MY_SEGMENTS_UPDATE';\nexport var MY_SEGMENTS_UPDATE_V2 = 'MY_SEGMENTS_UPDATE_V2';\nexport var SEGMENT_UPDATE = 'SEGMENT_UPDATE';\nexport var SPLIT_KILL = 'SPLIT_KILL';\nexport var SPLIT_UPDATE = 'SPLIT_UPDATE';\n// Control-type push notifications, handled by NotificationKeeper\nexport var CONTROL = 'CONTROL';\nexport var OCCUPANCY = 'OCCUPANCY';\nexport var ControlType;\n(function (ControlType) {\n    ControlType[\"STREAMING_DISABLED\"] = \"STREAMING_DISABLED\";\n    ControlType[\"STREAMING_PAUSED\"] = \"STREAMING_PAUSED\";\n    ControlType[\"STREAMING_RESUMED\"] = \"STREAMING_RESUMED\";\n    ControlType[\"STREAMING_RESET\"] = \"STREAMING_RESET\";\n})(ControlType || (ControlType = {}));\n"],"mappings":"AAAA;AACA,OAAO,IAAIA,yBAAyB,GAAG,GAAG;AAC1C;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,uBAAuB,GAAG,yBAAyB;AAC9D;AACA;AACA;AACA;AACA,OAAO,IAAIC,oBAAoB,GAAG,sBAAsB;AACxD;AACA;AACA;AACA;AACA,OAAO,IAAIC,iBAAiB,GAAG,mBAAmB;AAClD;AACA;AACA;AACA;AACA,OAAO,IAAIC,mBAAmB,GAAG,qBAAqB;AACtD;AACA,OAAO,IAAIC,kBAAkB,GAAG,oBAAoB;AACpD,OAAO,IAAIC,qBAAqB,GAAG,uBAAuB;AAC1D,OAAO,IAAIC,cAAc,GAAG,gBAAgB;AAC5C,OAAO,IAAIC,UAAU,GAAG,YAAY;AACpC,OAAO,IAAIC,YAAY,GAAG,cAAc;AACxC;AACA,OAAO,IAAIC,OAAO,GAAG,SAAS;AAC9B,OAAO,IAAIC,SAAS,GAAG,WAAW;AAClC,OAAO,IAAIC,WAAW;AACtB,CAAC,UAAUA,WAAW,EAAE;EACpBA,WAAW,CAAC,oBAAoB,CAAC,GAAG,oBAAoB;EACxDA,WAAW,CAAC,kBAAkB,CAAC,GAAG,kBAAkB;EACpDA,WAAW,CAAC,mBAAmB,CAAC,GAAG,mBAAmB;EACtDA,WAAW,CAAC,iBAAiB,CAAC,GAAG,iBAAiB;AACtD,CAAC,EAAEA,WAAW,KAAKA,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module"}