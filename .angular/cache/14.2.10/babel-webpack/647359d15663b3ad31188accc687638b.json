{"ast":null,"code":"import { syncTaskFactory } from '../../syncTask';\nimport { mySegmentsFetcherFactory } from '../fetchers/mySegmentsFetcher';\nimport { mySegmentsUpdaterFactory } from '../updaters/mySegmentsUpdater';\n/**\n * Creates a sync task that periodically executes a `mySegmentsUpdater` task\n */\nexport function mySegmentsSyncTaskFactory(fetchMySegments, storage, readiness, settings, matchingKey) {\n  return syncTaskFactory(settings.log, mySegmentsUpdaterFactory(settings.log, mySegmentsFetcherFactory(fetchMySegments), storage.splits, storage.segments, readiness.segments, settings.startup.requestTimeoutBeforeReady, settings.startup.retriesOnFailureBeforeReady, matchingKey), settings.scheduler.segmentsRefreshRate, 'mySegmentsUpdater');\n}","map":{"version":3,"names":["syncTaskFactory","mySegmentsFetcherFactory","mySegmentsUpdaterFactory","mySegmentsSyncTaskFactory","fetchMySegments","storage","readiness","settings","matchingKey","log","splits","segments","startup","requestTimeoutBeforeReady","retriesOnFailureBeforeReady","scheduler","segmentsRefreshRate"],"sources":["/Users/temitopeogunrekun/Desktop/angular-db/node_modules/@splitsoftware/splitio-commons/esm/sync/polling/syncTasks/mySegmentsSyncTask.js"],"sourcesContent":["import { syncTaskFactory } from '../../syncTask';\nimport { mySegmentsFetcherFactory } from '../fetchers/mySegmentsFetcher';\nimport { mySegmentsUpdaterFactory } from '../updaters/mySegmentsUpdater';\n/**\n * Creates a sync task that periodically executes a `mySegmentsUpdater` task\n */\nexport function mySegmentsSyncTaskFactory(fetchMySegments, storage, readiness, settings, matchingKey) {\n    return syncTaskFactory(settings.log, mySegmentsUpdaterFactory(settings.log, mySegmentsFetcherFactory(fetchMySegments), storage.splits, storage.segments, readiness.segments, settings.startup.requestTimeoutBeforeReady, settings.startup.retriesOnFailureBeforeReady, matchingKey), settings.scheduler.segmentsRefreshRate, 'mySegmentsUpdater');\n}\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,gBAAgB;AAChD,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE;AACA;AACA;AACA,OAAO,SAASC,yBAAyB,CAACC,eAAe,EAAEC,OAAO,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,EAAE;EAClG,OAAOR,eAAe,CAACO,QAAQ,CAACE,GAAG,EAAEP,wBAAwB,CAACK,QAAQ,CAACE,GAAG,EAAER,wBAAwB,CAACG,eAAe,CAAC,EAAEC,OAAO,CAACK,MAAM,EAAEL,OAAO,CAACM,QAAQ,EAAEL,SAAS,CAACK,QAAQ,EAAEJ,QAAQ,CAACK,OAAO,CAACC,yBAAyB,EAAEN,QAAQ,CAACK,OAAO,CAACE,2BAA2B,EAAEN,WAAW,CAAC,EAAED,QAAQ,CAACQ,SAAS,CAACC,mBAAmB,EAAE,mBAAmB,CAAC;AACrV"},"metadata":{},"sourceType":"module"}