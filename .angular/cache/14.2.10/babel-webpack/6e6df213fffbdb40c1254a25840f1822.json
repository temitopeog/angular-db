{"ast":null,"code":"import { sanitize } from './sanitize';\nimport { ENGINE_VALUE, ENGINE_VALUE_NO_ATTRIBUTES, ENGINE_VALUE_INVALID } from '../../logger/constants';\nfunction parseValue(log, key, attributeName, attributes) {\n  var value = undefined;\n  if (attributeName) {\n    if (attributes) {\n      value = attributes[attributeName];\n      log.debug(ENGINE_VALUE, [attributeName, value]);\n    } else {\n      log.warn(ENGINE_VALUE_NO_ATTRIBUTES, [attributeName]);\n    }\n  } else {\n    value = key;\n  }\n  return value;\n}\n/**\n * Defines value to be matched (key / attribute).\n */\nexport function sanitizeValue(log, key, matcherDto, attributes) {\n  var attributeName = matcherDto.attribute;\n  var valueToMatch = parseValue(log, key, attributeName, attributes);\n  var sanitizedValue = sanitize(log, matcherDto.type, valueToMatch, matcherDto.dataType, attributes);\n  if (sanitizedValue !== undefined) {\n    return sanitizedValue;\n  } else {\n    log.warn(ENGINE_VALUE_INVALID, [valueToMatch + (attributeName ? ' for attribute ' + attributeName : '')]);\n    return;\n  }\n}","map":{"version":3,"names":["sanitize","ENGINE_VALUE","ENGINE_VALUE_NO_ATTRIBUTES","ENGINE_VALUE_INVALID","parseValue","log","key","attributeName","attributes","value","undefined","debug","warn","sanitizeValue","matcherDto","attribute","valueToMatch","sanitizedValue","type","dataType"],"sources":["/Users/temitopeogunrekun/Desktop/angular-db/node_modules/@splitsoftware/splitio-commons/esm/evaluator/value/index.js"],"sourcesContent":["import { sanitize } from './sanitize';\nimport { ENGINE_VALUE, ENGINE_VALUE_NO_ATTRIBUTES, ENGINE_VALUE_INVALID } from '../../logger/constants';\nfunction parseValue(log, key, attributeName, attributes) {\n    var value = undefined;\n    if (attributeName) {\n        if (attributes) {\n            value = attributes[attributeName];\n            log.debug(ENGINE_VALUE, [attributeName, value]);\n        }\n        else {\n            log.warn(ENGINE_VALUE_NO_ATTRIBUTES, [attributeName]);\n        }\n    }\n    else {\n        value = key;\n    }\n    return value;\n}\n/**\n * Defines value to be matched (key / attribute).\n */\nexport function sanitizeValue(log, key, matcherDto, attributes) {\n    var attributeName = matcherDto.attribute;\n    var valueToMatch = parseValue(log, key, attributeName, attributes);\n    var sanitizedValue = sanitize(log, matcherDto.type, valueToMatch, matcherDto.dataType, attributes);\n    if (sanitizedValue !== undefined) {\n        return sanitizedValue;\n    }\n    else {\n        log.warn(ENGINE_VALUE_INVALID, [valueToMatch + (attributeName ? ' for attribute ' + attributeName : '')]);\n        return;\n    }\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AACrC,SAASC,YAAY,EAAEC,0BAA0B,EAAEC,oBAAoB,QAAQ,wBAAwB;AACvG,SAASC,UAAU,CAACC,GAAG,EAAEC,GAAG,EAAEC,aAAa,EAAEC,UAAU,EAAE;EACrD,IAAIC,KAAK,GAAGC,SAAS;EACrB,IAAIH,aAAa,EAAE;IACf,IAAIC,UAAU,EAAE;MACZC,KAAK,GAAGD,UAAU,CAACD,aAAa,CAAC;MACjCF,GAAG,CAACM,KAAK,CAACV,YAAY,EAAE,CAACM,aAAa,EAAEE,KAAK,CAAC,CAAC;IACnD,CAAC,MACI;MACDJ,GAAG,CAACO,IAAI,CAACV,0BAA0B,EAAE,CAACK,aAAa,CAAC,CAAC;IACzD;EACJ,CAAC,MACI;IACDE,KAAK,GAAGH,GAAG;EACf;EACA,OAAOG,KAAK;AAChB;AACA;AACA;AACA;AACA,OAAO,SAASI,aAAa,CAACR,GAAG,EAAEC,GAAG,EAAEQ,UAAU,EAAEN,UAAU,EAAE;EAC5D,IAAID,aAAa,GAAGO,UAAU,CAACC,SAAS;EACxC,IAAIC,YAAY,GAAGZ,UAAU,CAACC,GAAG,EAAEC,GAAG,EAAEC,aAAa,EAAEC,UAAU,CAAC;EAClE,IAAIS,cAAc,GAAGjB,QAAQ,CAACK,GAAG,EAAES,UAAU,CAACI,IAAI,EAAEF,YAAY,EAAEF,UAAU,CAACK,QAAQ,EAAEX,UAAU,CAAC;EAClG,IAAIS,cAAc,KAAKP,SAAS,EAAE;IAC9B,OAAOO,cAAc;EACzB,CAAC,MACI;IACDZ,GAAG,CAACO,IAAI,CAACT,oBAAoB,EAAE,CAACa,YAAY,IAAIT,aAAa,GAAG,iBAAiB,GAAGA,aAAa,GAAG,EAAE,CAAC,CAAC,CAAC;IACzG;EACJ;AACJ"},"metadata":{},"sourceType":"module"}