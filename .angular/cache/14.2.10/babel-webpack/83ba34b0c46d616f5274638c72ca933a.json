{"ast":null,"code":"import { isObject } from '../lang';\n// function isSplitKeyObject(key: any): key is SplitIO.SplitKeyObject {\n//   return key !== undefined && key !== null && typeof key.matchingKey === 'string';\n// }\n// returns the matchingKey if the Key is defined as an object or the key itself if it is a string\nexport function getMatching(key) {\n  return isObject(key) ? key.matchingKey : key;\n}\n// if the key is a string, there's no bucketingKey (undefined)\nexport function getBucketing(key) {\n  return isObject(key) ? key.bucketingKey : undefined;\n}\n/**\n * Verify type of key and return a valid object key used for get treatment for a\n * specific split.\n */\nexport function keyParser(key) {\n  if (isObject(key)) {\n    return {\n      matchingKey: key.matchingKey,\n      bucketingKey: key.bucketingKey\n    };\n  } else {\n    return {\n      matchingKey: key,\n      bucketingKey: key\n    };\n  }\n}","map":{"version":3,"names":["isObject","getMatching","key","matchingKey","getBucketing","bucketingKey","undefined","keyParser"],"sources":["/Users/temitopeogunrekun/Desktop/angular-db/node_modules/@splitsoftware/splitio-commons/esm/utils/key/index.js"],"sourcesContent":["import { isObject } from '../lang';\n// function isSplitKeyObject(key: any): key is SplitIO.SplitKeyObject {\n//   return key !== undefined && key !== null && typeof key.matchingKey === 'string';\n// }\n// returns the matchingKey if the Key is defined as an object or the key itself if it is a string\nexport function getMatching(key) {\n    return isObject(key) ? key.matchingKey : key;\n}\n// if the key is a string, there's no bucketingKey (undefined)\nexport function getBucketing(key) {\n    return isObject(key) ? key.bucketingKey : undefined;\n}\n/**\n * Verify type of key and return a valid object key used for get treatment for a\n * specific split.\n */\nexport function keyParser(key) {\n    if (isObject(key)) {\n        return {\n            matchingKey: key.matchingKey,\n            bucketingKey: key.bucketingKey\n        };\n    }\n    else {\n        return {\n            matchingKey: key,\n            bucketingKey: key\n        };\n    }\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,SAAS;AAClC;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAW,CAACC,GAAG,EAAE;EAC7B,OAAOF,QAAQ,CAACE,GAAG,CAAC,GAAGA,GAAG,CAACC,WAAW,GAAGD,GAAG;AAChD;AACA;AACA,OAAO,SAASE,YAAY,CAACF,GAAG,EAAE;EAC9B,OAAOF,QAAQ,CAACE,GAAG,CAAC,GAAGA,GAAG,CAACG,YAAY,GAAGC,SAAS;AACvD;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAAS,CAACL,GAAG,EAAE;EAC3B,IAAIF,QAAQ,CAACE,GAAG,CAAC,EAAE;IACf,OAAO;MACHC,WAAW,EAAED,GAAG,CAACC,WAAW;MAC5BE,YAAY,EAAEH,GAAG,CAACG;IACtB,CAAC;EACL,CAAC,MACI;IACD,OAAO;MACHF,WAAW,EAAED,GAAG;MAChBG,YAAY,EAAEH;IAClB,CAAC;EACL;AACJ"},"metadata":{},"sourceType":"module"}