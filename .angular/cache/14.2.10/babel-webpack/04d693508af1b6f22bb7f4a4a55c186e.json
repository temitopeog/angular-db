{"ast":null,"code":"/*\n Trimmed version of \"utfx\" library (https://www.npmjs.com/package/utfx/v/1.0.1) used to encode,\n decode and convert UTF8 / UTF16 in JavaScript, with the minimal methods used by the SDK.\n\n utfx (c) 2014 Daniel Wirtz <dcode@dcode.io>\n Released under the Apache License, Version 2.0\n see: https://github.com/dcodeIO/utfx for details\n*/\n/**\n * Encodes UTF8 code points to UTF8 bytes.\n * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\n *  respectively `null` if there are no more code points left or a single numeric code point.\n * @param {!function(number)} dst Bytes destination as a function successively called with the next byte\n * @expose\n */\nfunction encodeUTF8(src, dst) {\n  var cp = null;\n  if (typeof src === 'number') cp = src, src = function () {\n    return null;\n  };\n  while (cp !== null || (cp = src()) !== null) {\n    if (cp < 0x80) dst(cp & 0x7F);else if (cp < 0x800) dst(cp >> 6 & 0x1F | 0xC0), dst(cp & 0x3F | 0x80);else if (cp < 0x10000) dst(cp >> 12 & 0x0F | 0xE0), dst(cp >> 6 & 0x3F | 0x80), dst(cp & 0x3F | 0x80);else dst(cp >> 18 & 0x07 | 0xF0), dst(cp >> 12 & 0x3F | 0x80), dst(cp >> 6 & 0x3F | 0x80), dst(cp & 0x3F | 0x80);\n    cp = null;\n  }\n}\n/**\n * Converts UTF16 characters to UTF8 code points.\n * @param {!function():number|null} src Characters source as a function returning the next char code respectively\n *  `null` if there are no more characters left.\n * @param {!function(number)} dst Code points destination as a function successively called with each converted code\n *  point.\n * @expose\n */\nfunction UTF16toUTF8(src, dst) {\n  var c1,\n    c2 = null;\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if ((c1 = c2 !== null ? c2 : src()) === null) break;\n    if (c1 >= 0xD800 && c1 <= 0xDFFF) {\n      if ((c2 = src()) !== null) {\n        if (c2 >= 0xDC00 && c2 <= 0xDFFF) {\n          dst((c1 - 0xD800) * 0x400 + c2 - 0xDC00 + 0x10000);\n          c2 = null;\n          continue;\n        }\n      }\n    }\n    dst(c1);\n  }\n  if (c2 !== null) dst(c2);\n}\n/**\n * Converts and encodes UTF16 characters to UTF8 bytes.\n * @param {!function():number|null} src Characters source as a function returning the next char code respectively `null`\n *  if there are no more characters left.\n * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.\n * @expose\n */\nexport function encodeUTF16toUTF8(src, dst) {\n  UTF16toUTF8(src, function (cp) {\n    encodeUTF8(cp, dst);\n  });\n}\n/**\n * String.fromCharCode reference for compile time renaming.\n * @type {!function(...[number]):string}\n * @inner\n */\nvar stringFromCharCode = String.fromCharCode;\n/**\n * Creates a source function for a string.\n * @param {string} s String to read from\n * @returns {!function():number|null} Source function returning the next char code respectively `null` if there are\n *  no more characters left.\n * @throws {TypeError} If the argument is invalid\n * @expose\n */\nexport function stringSource(s) {\n  if (typeof s !== 'string') throw TypeError('Illegal argument: ' + typeof s);\n  var i = 0;\n  return function () {\n    return i >= s.length ? null : s.charCodeAt(i++);\n  };\n}\n/**\n * Creates a destination function for a string.\n * @returns {function(number=):undefined|string} Destination function successively called with the next char code.\n *  Returns the final string when called without arguments.\n * @expose\n */\nexport function stringDestination() {\n  var cs = [],\n    ps = [];\n  return function () {\n    if (arguments.length === 0) return ps.join('') + stringFromCharCode.apply(String, cs);\n    if (cs.length + arguments.length > 1024) ps.push(stringFromCharCode.apply(String, cs)), cs.length = 0; // @ts-ignore\n    Array.prototype.push.apply(cs, arguments);\n  };\n}","map":{"version":3,"names":["encodeUTF8","src","dst","cp","UTF16toUTF8","c1","c2","encodeUTF16toUTF8","stringFromCharCode","String","fromCharCode","stringSource","s","TypeError","i","length","charCodeAt","stringDestination","cs","ps","arguments","join","apply","push","Array","prototype"],"sources":["/Users/temitopeogunrekun/Desktop/angular-db/node_modules/@splitsoftware/splitio-commons/esm/utils/murmur3/utfx.js"],"sourcesContent":["/*\n Trimmed version of \"utfx\" library (https://www.npmjs.com/package/utfx/v/1.0.1) used to encode,\n decode and convert UTF8 / UTF16 in JavaScript, with the minimal methods used by the SDK.\n\n utfx (c) 2014 Daniel Wirtz <dcode@dcode.io>\n Released under the Apache License, Version 2.0\n see: https://github.com/dcodeIO/utfx for details\n*/\n/**\n * Encodes UTF8 code points to UTF8 bytes.\n * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\n *  respectively `null` if there are no more code points left or a single numeric code point.\n * @param {!function(number)} dst Bytes destination as a function successively called with the next byte\n * @expose\n */\nfunction encodeUTF8(src, dst) {\n    var cp = null;\n    if (typeof src === 'number')\n        cp = src, src = function () { return null; };\n    while (cp !== null || (cp = src()) !== null) {\n        if (cp < 0x80)\n            dst(cp & 0x7F);\n        else if (cp < 0x800)\n            dst(((cp >> 6) & 0x1F) | 0xC0), dst((cp & 0x3F) | 0x80);\n        else if (cp < 0x10000)\n            dst(((cp >> 12) & 0x0F) | 0xE0), dst(((cp >> 6) & 0x3F) | 0x80), dst((cp & 0x3F) | 0x80);\n        else\n            dst(((cp >> 18) & 0x07) | 0xF0), dst(((cp >> 12) & 0x3F) | 0x80), dst(((cp >> 6) & 0x3F) | 0x80), dst((cp & 0x3F) | 0x80);\n        cp = null;\n    }\n}\n/**\n * Converts UTF16 characters to UTF8 code points.\n * @param {!function():number|null} src Characters source as a function returning the next char code respectively\n *  `null` if there are no more characters left.\n * @param {!function(number)} dst Code points destination as a function successively called with each converted code\n *  point.\n * @expose\n */\nfunction UTF16toUTF8(src, dst) {\n    var c1, c2 = null;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        if ((c1 = c2 !== null ? c2 : src()) === null)\n            break;\n        if (c1 >= 0xD800 && c1 <= 0xDFFF) {\n            if ((c2 = src()) !== null) {\n                if (c2 >= 0xDC00 && c2 <= 0xDFFF) {\n                    dst((c1 - 0xD800) * 0x400 + c2 - 0xDC00 + 0x10000);\n                    c2 = null;\n                    continue;\n                }\n            }\n        }\n        dst(c1);\n    }\n    if (c2 !== null)\n        dst(c2);\n}\n/**\n * Converts and encodes UTF16 characters to UTF8 bytes.\n * @param {!function():number|null} src Characters source as a function returning the next char code respectively `null`\n *  if there are no more characters left.\n * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.\n * @expose\n */\nexport function encodeUTF16toUTF8(src, dst) {\n    UTF16toUTF8(src, function (cp) {\n        encodeUTF8(cp, dst);\n    });\n}\n/**\n * String.fromCharCode reference for compile time renaming.\n * @type {!function(...[number]):string}\n * @inner\n */\nvar stringFromCharCode = String.fromCharCode;\n/**\n * Creates a source function for a string.\n * @param {string} s String to read from\n * @returns {!function():number|null} Source function returning the next char code respectively `null` if there are\n *  no more characters left.\n * @throws {TypeError} If the argument is invalid\n * @expose\n */\nexport function stringSource(s) {\n    if (typeof s !== 'string')\n        throw TypeError('Illegal argument: ' + (typeof s));\n    var i = 0;\n    return function () {\n        return i >= s.length ? null : s.charCodeAt(i++);\n    };\n}\n/**\n * Creates a destination function for a string.\n * @returns {function(number=):undefined|string} Destination function successively called with the next char code.\n *  Returns the final string when called without arguments.\n * @expose\n */\nexport function stringDestination() {\n    var cs = [], ps = [];\n    return function () {\n        if (arguments.length === 0)\n            return ps.join('') + stringFromCharCode.apply(String, cs);\n        if (cs.length + arguments.length > 1024)\n            ps.push(stringFromCharCode.apply(String, cs)), cs.length = 0; // @ts-ignore\n        Array.prototype.push.apply(cs, arguments);\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}