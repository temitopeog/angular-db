{"ast":null,"code":"import { objectAssign } from '../../../utils/lang/objectAssign';\nimport { encodeToBase64 } from '../../../utils/base64';\nimport { decodeJWTtoken } from '../../../utils/jwt';\nimport { hash } from '../../../utils/murmur3/murmur3';\n/**\n * Factory of authentication function.\n *\n * @param fetchAuth `SplitAPI.fetchAuth` endpoint\n */\nexport function authenticateFactory(fetchAuth) {\n  /**\n   * Run authentication requests to Auth Server, and returns a promise that resolves with the decoded JTW token.\n   * @param {string[] | undefined} userKeys set of user Keys to track MY_SEGMENTS_CHANGES. It is undefined for server-side API.\n   */\n  return function authenticate(userKeys) {\n    return fetchAuth(userKeys).then(function (resp) {\n      return resp.json();\n    }).then(function (json) {\n      if (json.token) {\n        // empty token when `\"pushEnabled\": false`\n        var decodedToken = decodeJWTtoken(json.token);\n        if (typeof decodedToken.iat !== 'number' || typeof decodedToken.exp !== 'number') throw new Error('token properties \"issuedAt\" (iat) or \"expiration\" (exp) are missing or invalid');\n        var channels = JSON.parse(decodedToken['x-ably-capability']);\n        return objectAssign({\n          decodedToken: decodedToken,\n          channels: channels\n        }, json);\n      }\n      return json;\n    });\n  };\n}\n/**\n * Returns the hash of a given user key\n */\nexport function hashUserKey(userKey) {\n  return encodeToBase64(hash(userKey, 0).toString());\n}","map":{"version":3,"names":["objectAssign","encodeToBase64","decodeJWTtoken","hash","authenticateFactory","fetchAuth","authenticate","userKeys","then","resp","json","token","decodedToken","iat","exp","Error","channels","JSON","parse","hashUserKey","userKey","toString"],"sources":["/Users/temitopeogunrekun/Desktop/angular-db/node_modules/@splitsoftware/splitio-commons/esm/sync/streaming/AuthClient/index.js"],"sourcesContent":["import { objectAssign } from '../../../utils/lang/objectAssign';\nimport { encodeToBase64 } from '../../../utils/base64';\nimport { decodeJWTtoken } from '../../../utils/jwt';\nimport { hash } from '../../../utils/murmur3/murmur3';\n/**\n * Factory of authentication function.\n *\n * @param fetchAuth `SplitAPI.fetchAuth` endpoint\n */\nexport function authenticateFactory(fetchAuth) {\n    /**\n     * Run authentication requests to Auth Server, and returns a promise that resolves with the decoded JTW token.\n     * @param {string[] | undefined} userKeys set of user Keys to track MY_SEGMENTS_CHANGES. It is undefined for server-side API.\n     */\n    return function authenticate(userKeys) {\n        return fetchAuth(userKeys)\n            .then(function (resp) { return resp.json(); })\n            .then(function (json) {\n            if (json.token) { // empty token when `\"pushEnabled\": false`\n                var decodedToken = decodeJWTtoken(json.token);\n                if (typeof decodedToken.iat !== 'number' || typeof decodedToken.exp !== 'number')\n                    throw new Error('token properties \"issuedAt\" (iat) or \"expiration\" (exp) are missing or invalid');\n                var channels = JSON.parse(decodedToken['x-ably-capability']);\n                return objectAssign({\n                    decodedToken: decodedToken,\n                    channels: channels\n                }, json);\n            }\n            return json;\n        });\n    };\n}\n/**\n * Returns the hash of a given user key\n */\nexport function hashUserKey(userKey) {\n    return encodeToBase64(hash(userKey, 0).toString());\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,kCAAkC;AAC/D,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,cAAc,QAAQ,oBAAoB;AACnD,SAASC,IAAI,QAAQ,gCAAgC;AACrD;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,mBAAmB,CAACC,SAAS,EAAE;EAC3C;AACJ;AACA;AACA;EACI,OAAO,SAASC,YAAY,CAACC,QAAQ,EAAE;IACnC,OAAOF,SAAS,CAACE,QAAQ,CAAC,CACrBC,IAAI,CAAC,UAAUC,IAAI,EAAE;MAAE,OAAOA,IAAI,CAACC,IAAI,EAAE;IAAE,CAAC,CAAC,CAC7CF,IAAI,CAAC,UAAUE,IAAI,EAAE;MACtB,IAAIA,IAAI,CAACC,KAAK,EAAE;QAAE;QACd,IAAIC,YAAY,GAAGV,cAAc,CAACQ,IAAI,CAACC,KAAK,CAAC;QAC7C,IAAI,OAAOC,YAAY,CAACC,GAAG,KAAK,QAAQ,IAAI,OAAOD,YAAY,CAACE,GAAG,KAAK,QAAQ,EAC5E,MAAM,IAAIC,KAAK,CAAC,gFAAgF,CAAC;QACrG,IAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACN,YAAY,CAAC,mBAAmB,CAAC,CAAC;QAC5D,OAAOZ,YAAY,CAAC;UAChBY,YAAY,EAAEA,YAAY;UAC1BI,QAAQ,EAAEA;QACd,CAAC,EAAEN,IAAI,CAAC;MACZ;MACA,OAAOA,IAAI;IACf,CAAC,CAAC;EACN,CAAC;AACL;AACA;AACA;AACA;AACA,OAAO,SAASS,WAAW,CAACC,OAAO,EAAE;EACjC,OAAOnB,cAAc,CAACE,IAAI,CAACiB,OAAO,EAAE,CAAC,CAAC,CAACC,QAAQ,EAAE,CAAC;AACtD"},"metadata":{},"sourceType":"module"}