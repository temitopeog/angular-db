{"ast":null,"code":"import { EXCEPTION, SDK_NOT_READY } from '../utils/labels';\nimport { timer } from '../utils/timeTracker/timer';\nimport { TOKEN_REFRESH, AUTH_REJECTION } from '../utils/constants';\nexport function telemetryTrackerFactory(telemetryCache, now) {\n  if (telemetryCache && now) {\n    var startTime_1 = timer(now);\n    return {\n      trackEval: function (method) {\n        var evalTime = timer(now);\n        return function (label) {\n          switch (label) {\n            case EXCEPTION:\n              telemetryCache.recordException(method);\n              return;\n            // Don't track latency on exceptions\n            case SDK_NOT_READY:\n              // @ts-ignore ITelemetryCacheAsync doesn't implement the method\n              if (telemetryCache.recordNonReadyUsage) telemetryCache.recordNonReadyUsage();\n          }\n          telemetryCache.recordLatency(method, evalTime());\n        };\n      },\n      trackHttp: function (operation) {\n        var httpTime = timer(now);\n        return function (error) {\n          telemetryCache.recordHttpLatency(operation, httpTime());\n          if (error && error.statusCode) telemetryCache.recordHttpError(operation, error.statusCode);else telemetryCache.recordSuccessfulSync(operation, Date.now());\n        };\n      },\n      sessionLength: function () {\n        if (telemetryCache.recordSessionLength) telemetryCache.recordSessionLength(startTime_1());\n      },\n      streamingEvent: function (e, d) {\n        if (e === AUTH_REJECTION) {\n          telemetryCache.recordAuthRejections();\n        } else {\n          telemetryCache.recordStreamingEvents({\n            e: e,\n            d: d,\n            t: Date.now()\n          });\n          if (e === TOKEN_REFRESH) telemetryCache.recordTokenRefreshes();\n        }\n      }\n    };\n  } else {\n    // If there is not `telemetryCache` or `now` time tracker, return a no-op telemetry tracker\n    var noopTrack = function () {\n      return function () {};\n    };\n    return {\n      trackEval: noopTrack,\n      trackHttp: noopTrack,\n      sessionLength: function () {},\n      streamingEvent: function () {}\n    };\n  }\n}","map":{"version":3,"names":["EXCEPTION","SDK_NOT_READY","timer","TOKEN_REFRESH","AUTH_REJECTION","telemetryTrackerFactory","telemetryCache","now","startTime_1","trackEval","method","evalTime","label","recordException","recordNonReadyUsage","recordLatency","trackHttp","operation","httpTime","error","recordHttpLatency","statusCode","recordHttpError","recordSuccessfulSync","Date","sessionLength","recordSessionLength","streamingEvent","e","d","recordAuthRejections","recordStreamingEvents","t","recordTokenRefreshes","noopTrack"],"sources":["/Users/temitopeogunrekun/Desktop/angular-db/node_modules/@splitsoftware/splitio-commons/esm/trackers/telemetryTracker.js"],"sourcesContent":["import { EXCEPTION, SDK_NOT_READY } from '../utils/labels';\nimport { timer } from '../utils/timeTracker/timer';\nimport { TOKEN_REFRESH, AUTH_REJECTION } from '../utils/constants';\nexport function telemetryTrackerFactory(telemetryCache, now) {\n    if (telemetryCache && now) {\n        var startTime_1 = timer(now);\n        return {\n            trackEval: function (method) {\n                var evalTime = timer(now);\n                return function (label) {\n                    switch (label) {\n                        case EXCEPTION:\n                            telemetryCache.recordException(method);\n                            return; // Don't track latency on exceptions\n                        case SDK_NOT_READY: // @ts-ignore ITelemetryCacheAsync doesn't implement the method\n                            if (telemetryCache.recordNonReadyUsage)\n                                telemetryCache.recordNonReadyUsage();\n                    }\n                    telemetryCache.recordLatency(method, evalTime());\n                };\n            },\n            trackHttp: function (operation) {\n                var httpTime = timer(now);\n                return function (error) {\n                    telemetryCache.recordHttpLatency(operation, httpTime());\n                    if (error && error.statusCode)\n                        telemetryCache.recordHttpError(operation, error.statusCode);\n                    else\n                        telemetryCache.recordSuccessfulSync(operation, Date.now());\n                };\n            },\n            sessionLength: function () {\n                if (telemetryCache.recordSessionLength)\n                    telemetryCache.recordSessionLength(startTime_1());\n            },\n            streamingEvent: function (e, d) {\n                if (e === AUTH_REJECTION) {\n                    telemetryCache.recordAuthRejections();\n                }\n                else {\n                    telemetryCache.recordStreamingEvents({\n                        e: e,\n                        d: d,\n                        t: Date.now()\n                    });\n                    if (e === TOKEN_REFRESH)\n                        telemetryCache.recordTokenRefreshes();\n                }\n            }\n        };\n    }\n    else { // If there is not `telemetryCache` or `now` time tracker, return a no-op telemetry tracker\n        var noopTrack = function () { return function () { }; };\n        return {\n            trackEval: noopTrack,\n            trackHttp: noopTrack,\n            sessionLength: function () { },\n            streamingEvent: function () { },\n        };\n    }\n}\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,aAAa,QAAQ,iBAAiB;AAC1D,SAASC,KAAK,QAAQ,4BAA4B;AAClD,SAASC,aAAa,EAAEC,cAAc,QAAQ,oBAAoB;AAClE,OAAO,SAASC,uBAAuB,CAACC,cAAc,EAAEC,GAAG,EAAE;EACzD,IAAID,cAAc,IAAIC,GAAG,EAAE;IACvB,IAAIC,WAAW,GAAGN,KAAK,CAACK,GAAG,CAAC;IAC5B,OAAO;MACHE,SAAS,EAAE,UAAUC,MAAM,EAAE;QACzB,IAAIC,QAAQ,GAAGT,KAAK,CAACK,GAAG,CAAC;QACzB,OAAO,UAAUK,KAAK,EAAE;UACpB,QAAQA,KAAK;YACT,KAAKZ,SAAS;cACVM,cAAc,CAACO,eAAe,CAACH,MAAM,CAAC;cACtC;YAAQ;YACZ,KAAKT,aAAa;cAAE;cAChB,IAAIK,cAAc,CAACQ,mBAAmB,EAClCR,cAAc,CAACQ,mBAAmB,EAAE;UAAC;UAEjDR,cAAc,CAACS,aAAa,CAACL,MAAM,EAAEC,QAAQ,EAAE,CAAC;QACpD,CAAC;MACL,CAAC;MACDK,SAAS,EAAE,UAAUC,SAAS,EAAE;QAC5B,IAAIC,QAAQ,GAAGhB,KAAK,CAACK,GAAG,CAAC;QACzB,OAAO,UAAUY,KAAK,EAAE;UACpBb,cAAc,CAACc,iBAAiB,CAACH,SAAS,EAAEC,QAAQ,EAAE,CAAC;UACvD,IAAIC,KAAK,IAAIA,KAAK,CAACE,UAAU,EACzBf,cAAc,CAACgB,eAAe,CAACL,SAAS,EAAEE,KAAK,CAACE,UAAU,CAAC,CAAC,KAE5Df,cAAc,CAACiB,oBAAoB,CAACN,SAAS,EAAEO,IAAI,CAACjB,GAAG,EAAE,CAAC;QAClE,CAAC;MACL,CAAC;MACDkB,aAAa,EAAE,YAAY;QACvB,IAAInB,cAAc,CAACoB,mBAAmB,EAClCpB,cAAc,CAACoB,mBAAmB,CAAClB,WAAW,EAAE,CAAC;MACzD,CAAC;MACDmB,cAAc,EAAE,UAAUC,CAAC,EAAEC,CAAC,EAAE;QAC5B,IAAID,CAAC,KAAKxB,cAAc,EAAE;UACtBE,cAAc,CAACwB,oBAAoB,EAAE;QACzC,CAAC,MACI;UACDxB,cAAc,CAACyB,qBAAqB,CAAC;YACjCH,CAAC,EAAEA,CAAC;YACJC,CAAC,EAAEA,CAAC;YACJG,CAAC,EAAER,IAAI,CAACjB,GAAG;UACf,CAAC,CAAC;UACF,IAAIqB,CAAC,KAAKzB,aAAa,EACnBG,cAAc,CAAC2B,oBAAoB,EAAE;QAC7C;MACJ;IACJ,CAAC;EACL,CAAC,MACI;IAAE;IACH,IAAIC,SAAS,GAAG,YAAY;MAAE,OAAO,YAAY,CAAE,CAAC;IAAE,CAAC;IACvD,OAAO;MACHzB,SAAS,EAAEyB,SAAS;MACpBlB,SAAS,EAAEkB,SAAS;MACpBT,aAAa,EAAE,YAAY,CAAE,CAAC;MAC9BE,cAAc,EAAE,YAAY,CAAE;IAClC,CAAC;EACL;AACJ"},"metadata":{},"sourceType":"module"}