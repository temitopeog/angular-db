{"ast":null,"code":"import { validateIntegrations } from './common';\n/**\n * This function validates `settings.integrations` object that consists of a list of pluggable integration factories.\n *\n * @param {any} settings config object provided by the user to initialize the sdk\n *\n * @returns {Array} array of valid integration factories. The array might be empty if `settings` object does not have valid integrations.\n */\nexport function validatePluggableIntegrations(settings) {\n  return validateIntegrations(settings, function (integration) {\n    return typeof integration === 'function';\n  }, 'Integration items must be functions that initialize the integrations');\n}","map":{"version":3,"names":["validateIntegrations","validatePluggableIntegrations","settings","integration"],"sources":["/Users/temitopeogunrekun/Desktop/angular-db/node_modules/@splitsoftware/splitio-commons/esm/utils/settingsValidation/integrations/pluggable.js"],"sourcesContent":["import { validateIntegrations } from './common';\n/**\n * This function validates `settings.integrations` object that consists of a list of pluggable integration factories.\n *\n * @param {any} settings config object provided by the user to initialize the sdk\n *\n * @returns {Array} array of valid integration factories. The array might be empty if `settings` object does not have valid integrations.\n */\nexport function validatePluggableIntegrations(settings) {\n    return validateIntegrations(settings, function (integration) { return typeof integration === 'function'; }, 'Integration items must be functions that initialize the integrations');\n}\n"],"mappings":"AAAA,SAASA,oBAAoB,QAAQ,UAAU;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,6BAA6B,CAACC,QAAQ,EAAE;EACpD,OAAOF,oBAAoB,CAACE,QAAQ,EAAE,UAAUC,WAAW,EAAE;IAAE,OAAO,OAAOA,WAAW,KAAK,UAAU;EAAE,CAAC,EAAE,sEAAsE,CAAC;AACvL"},"metadata":{},"sourceType":"module"}