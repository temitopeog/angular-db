{"ast":null,"code":"import { LOCALHOST_MODE, STANDALONE_MODE, PRODUCER_MODE, CONSUMER_MODE, CONSUMER_PARTIAL_MODE } from '../constants';\nexport function mode(key, mode) {\n  // Leaving the comparison as is, in case we change the mode name but not the setting.\n  if (key === 'localhost') return LOCALHOST_MODE;\n  if ([STANDALONE_MODE, PRODUCER_MODE, CONSUMER_MODE, CONSUMER_PARTIAL_MODE].indexOf(mode) === -1) throw Error('Invalid mode provided');\n  return mode;\n}","map":{"version":3,"names":["LOCALHOST_MODE","STANDALONE_MODE","PRODUCER_MODE","CONSUMER_MODE","CONSUMER_PARTIAL_MODE","mode","key","indexOf","Error"],"sources":["/Users/temitopeogunrekun/Desktop/angular-db/node_modules/@splitsoftware/splitio-commons/esm/utils/settingsValidation/mode.js"],"sourcesContent":["import { LOCALHOST_MODE, STANDALONE_MODE, PRODUCER_MODE, CONSUMER_MODE, CONSUMER_PARTIAL_MODE } from '../constants';\nexport function mode(key, mode) {\n    // Leaving the comparison as is, in case we change the mode name but not the setting.\n    if (key === 'localhost')\n        return LOCALHOST_MODE;\n    if ([STANDALONE_MODE, PRODUCER_MODE, CONSUMER_MODE, CONSUMER_PARTIAL_MODE].indexOf(mode) === -1)\n        throw Error('Invalid mode provided');\n    return mode;\n}\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,eAAe,EAAEC,aAAa,EAAEC,aAAa,EAAEC,qBAAqB,QAAQ,cAAc;AACnH,OAAO,SAASC,IAAI,CAACC,GAAG,EAAED,IAAI,EAAE;EAC5B;EACA,IAAIC,GAAG,KAAK,WAAW,EACnB,OAAON,cAAc;EACzB,IAAI,CAACC,eAAe,EAAEC,aAAa,EAAEC,aAAa,EAAEC,qBAAqB,CAAC,CAACG,OAAO,CAACF,IAAI,CAAC,KAAK,CAAC,CAAC,EAC3F,MAAMG,KAAK,CAAC,uBAAuB,CAAC;EACxC,OAAOH,IAAI;AACf"},"metadata":{},"sourceType":"module"}