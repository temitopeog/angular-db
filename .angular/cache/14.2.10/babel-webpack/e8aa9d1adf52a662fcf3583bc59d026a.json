{"ast":null,"code":"import { SPLIT_IMPRESSION, SPLIT_EVENT } from '../utils/constants';\n/**\n * Factory function for IntegrationsManager with pluggable integrations.\n * The integrations manager instantiates integration, and bypass tracked events and impressions to them.\n *\n * @param integrations validated list of integration factories\n * @param params information of the Sdk factory instance that integrations can access to\n *\n * @returns integration manager or undefined if `integrations` are not present in settings.\n */\nexport function pluggableIntegrationsManagerFactory(integrations, params) {\n  var listeners = [];\n  // No need to check if `settings.integrations` is an array of functions. It was already validated\n  integrations.forEach(function (integrationFactory) {\n    var integration = integrationFactory(params);\n    if (integration && integration.queue) listeners.push(integration);\n  });\n  // If `listeners` is empty, not return a integration manager\n  if (listeners.length === 0) return;\n  // Exception safe methods: each integration module is responsable for handling errors\n  return {\n    handleImpression: function (impressionData) {\n      listeners.forEach(function (listener) {\n        return listener.queue({\n          type: SPLIT_IMPRESSION,\n          payload: impressionData\n        });\n      });\n    },\n    handleEvent: function (eventData) {\n      listeners.forEach(function (listener) {\n        return listener.queue({\n          type: SPLIT_EVENT,\n          payload: eventData\n        });\n      });\n    }\n  };\n}","map":{"version":3,"names":["SPLIT_IMPRESSION","SPLIT_EVENT","pluggableIntegrationsManagerFactory","integrations","params","listeners","forEach","integrationFactory","integration","queue","push","length","handleImpression","impressionData","listener","type","payload","handleEvent","eventData"],"sources":["/Users/temitopeogunrekun/Desktop/angular-db/node_modules/@splitsoftware/splitio-commons/esm/integrations/pluggable.js"],"sourcesContent":["import { SPLIT_IMPRESSION, SPLIT_EVENT } from '../utils/constants';\n/**\n * Factory function for IntegrationsManager with pluggable integrations.\n * The integrations manager instantiates integration, and bypass tracked events and impressions to them.\n *\n * @param integrations validated list of integration factories\n * @param params information of the Sdk factory instance that integrations can access to\n *\n * @returns integration manager or undefined if `integrations` are not present in settings.\n */\nexport function pluggableIntegrationsManagerFactory(integrations, params) {\n    var listeners = [];\n    // No need to check if `settings.integrations` is an array of functions. It was already validated\n    integrations.forEach(function (integrationFactory) {\n        var integration = integrationFactory(params);\n        if (integration && integration.queue)\n            listeners.push(integration);\n    });\n    // If `listeners` is empty, not return a integration manager\n    if (listeners.length === 0)\n        return;\n    // Exception safe methods: each integration module is responsable for handling errors\n    return {\n        handleImpression: function (impressionData) {\n            listeners.forEach(function (listener) { return listener.queue({ type: SPLIT_IMPRESSION, payload: impressionData }); });\n        },\n        handleEvent: function (eventData) {\n            listeners.forEach(function (listener) { return listener.queue({ type: SPLIT_EVENT, payload: eventData }); });\n        }\n    };\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,mCAAmC,CAACC,YAAY,EAAEC,MAAM,EAAE;EACtE,IAAIC,SAAS,GAAG,EAAE;EAClB;EACAF,YAAY,CAACG,OAAO,CAAC,UAAUC,kBAAkB,EAAE;IAC/C,IAAIC,WAAW,GAAGD,kBAAkB,CAACH,MAAM,CAAC;IAC5C,IAAII,WAAW,IAAIA,WAAW,CAACC,KAAK,EAChCJ,SAAS,CAACK,IAAI,CAACF,WAAW,CAAC;EACnC,CAAC,CAAC;EACF;EACA,IAAIH,SAAS,CAACM,MAAM,KAAK,CAAC,EACtB;EACJ;EACA,OAAO;IACHC,gBAAgB,EAAE,UAAUC,cAAc,EAAE;MACxCR,SAAS,CAACC,OAAO,CAAC,UAAUQ,QAAQ,EAAE;QAAE,OAAOA,QAAQ,CAACL,KAAK,CAAC;UAAEM,IAAI,EAAEf,gBAAgB;UAAEgB,OAAO,EAAEH;QAAe,CAAC,CAAC;MAAE,CAAC,CAAC;IAC1H,CAAC;IACDI,WAAW,EAAE,UAAUC,SAAS,EAAE;MAC9Bb,SAAS,CAACC,OAAO,CAAC,UAAUQ,QAAQ,EAAE;QAAE,OAAOA,QAAQ,CAACL,KAAK,CAAC;UAAEM,IAAI,EAAEd,WAAW;UAAEe,OAAO,EAAEE;QAAU,CAAC,CAAC;MAAE,CAAC,CAAC;IAChH;EACJ,CAAC;AACL"},"metadata":{},"sourceType":"module"}