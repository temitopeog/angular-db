{"ast":null,"code":"import { isObject, isString, isFiniteNumber, toString } from '../lang';\nimport { ERROR_NULL, WARN_CONVERTING, ERROR_EMPTY, ERROR_TOO_LONG, ERROR_INVALID, ERROR_INVALID_KEY_OBJECT } from '../../logger/constants';\nvar KEY_MAX_LENGTH = 250;\nfunction validateKeyValue(log, maybeKey, method, type) {\n  if (maybeKey == undefined) {\n    // eslint-disable-line eqeqeq\n    log.error(ERROR_NULL, [method, type]);\n    return false;\n  }\n  if (isFiniteNumber(maybeKey)) {\n    log.warn(WARN_CONVERTING, [method, type, maybeKey]);\n    return toString(maybeKey);\n  }\n  if (isString(maybeKey)) {\n    // It's a string, start by trimming the value.\n    maybeKey = maybeKey.trim();\n    // It's aaaaaall good.\n    if (maybeKey.length > 0 && maybeKey.length <= KEY_MAX_LENGTH) return maybeKey;\n    if (maybeKey.length === 0) {\n      log.error(ERROR_EMPTY, [method, type]);\n    } else if (maybeKey.length > KEY_MAX_LENGTH) {\n      log.error(ERROR_TOO_LONG, [method, type]);\n    }\n  } else {\n    log.error(ERROR_INVALID, [method, type]);\n  }\n  return false;\n}\nexport function validateKey(log, maybeKey, method) {\n  if (isObject(maybeKey)) {\n    // Validate key object\n    var matchingKey = validateKeyValue(log, maybeKey.matchingKey, method, 'matchingKey');\n    var bucketingKey = validateKeyValue(log, maybeKey.bucketingKey, method, 'bucketingKey');\n    if (matchingKey && bucketingKey) return {\n      matchingKey: matchingKey,\n      bucketingKey: bucketingKey\n    };\n    log.error(ERROR_INVALID_KEY_OBJECT, [method]);\n    return false;\n  } else {\n    return validateKeyValue(log, maybeKey, method, 'key');\n  }\n}","map":{"version":3,"names":["isObject","isString","isFiniteNumber","toString","ERROR_NULL","WARN_CONVERTING","ERROR_EMPTY","ERROR_TOO_LONG","ERROR_INVALID","ERROR_INVALID_KEY_OBJECT","KEY_MAX_LENGTH","validateKeyValue","log","maybeKey","method","type","undefined","error","warn","trim","length","validateKey","matchingKey","bucketingKey"],"sources":["/Users/temitopeogunrekun/Desktop/angular-db/node_modules/@splitsoftware/splitio-commons/esm/utils/inputValidation/key.js"],"sourcesContent":["import { isObject, isString, isFiniteNumber, toString } from '../lang';\nimport { ERROR_NULL, WARN_CONVERTING, ERROR_EMPTY, ERROR_TOO_LONG, ERROR_INVALID, ERROR_INVALID_KEY_OBJECT } from '../../logger/constants';\nvar KEY_MAX_LENGTH = 250;\nfunction validateKeyValue(log, maybeKey, method, type) {\n    if (maybeKey == undefined) { // eslint-disable-line eqeqeq\n        log.error(ERROR_NULL, [method, type]);\n        return false;\n    }\n    if (isFiniteNumber(maybeKey)) {\n        log.warn(WARN_CONVERTING, [method, type, maybeKey]);\n        return toString(maybeKey);\n    }\n    if (isString(maybeKey)) {\n        // It's a string, start by trimming the value.\n        maybeKey = maybeKey.trim();\n        // It's aaaaaall good.\n        if (maybeKey.length > 0 && maybeKey.length <= KEY_MAX_LENGTH)\n            return maybeKey;\n        if (maybeKey.length === 0) {\n            log.error(ERROR_EMPTY, [method, type]);\n        }\n        else if (maybeKey.length > KEY_MAX_LENGTH) {\n            log.error(ERROR_TOO_LONG, [method, type]);\n        }\n    }\n    else {\n        log.error(ERROR_INVALID, [method, type]);\n    }\n    return false;\n}\nexport function validateKey(log, maybeKey, method) {\n    if (isObject(maybeKey)) {\n        // Validate key object\n        var matchingKey = validateKeyValue(log, maybeKey.matchingKey, method, 'matchingKey');\n        var bucketingKey = validateKeyValue(log, maybeKey.bucketingKey, method, 'bucketingKey');\n        if (matchingKey && bucketingKey)\n            return {\n                matchingKey: matchingKey,\n                bucketingKey: bucketingKey\n            };\n        log.error(ERROR_INVALID_KEY_OBJECT, [method]);\n        return false;\n    }\n    else {\n        return validateKeyValue(log, maybeKey, method, 'key');\n    }\n}\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,QAAQ,EAAEC,cAAc,EAAEC,QAAQ,QAAQ,SAAS;AACtE,SAASC,UAAU,EAAEC,eAAe,EAAEC,WAAW,EAAEC,cAAc,EAAEC,aAAa,EAAEC,wBAAwB,QAAQ,wBAAwB;AAC1I,IAAIC,cAAc,GAAG,GAAG;AACxB,SAASC,gBAAgB,CAACC,GAAG,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,IAAI,EAAE;EACnD,IAAIF,QAAQ,IAAIG,SAAS,EAAE;IAAE;IACzBJ,GAAG,CAACK,KAAK,CAACb,UAAU,EAAE,CAACU,MAAM,EAAEC,IAAI,CAAC,CAAC;IACrC,OAAO,KAAK;EAChB;EACA,IAAIb,cAAc,CAACW,QAAQ,CAAC,EAAE;IAC1BD,GAAG,CAACM,IAAI,CAACb,eAAe,EAAE,CAACS,MAAM,EAAEC,IAAI,EAAEF,QAAQ,CAAC,CAAC;IACnD,OAAOV,QAAQ,CAACU,QAAQ,CAAC;EAC7B;EACA,IAAIZ,QAAQ,CAACY,QAAQ,CAAC,EAAE;IACpB;IACAA,QAAQ,GAAGA,QAAQ,CAACM,IAAI,EAAE;IAC1B;IACA,IAAIN,QAAQ,CAACO,MAAM,GAAG,CAAC,IAAIP,QAAQ,CAACO,MAAM,IAAIV,cAAc,EACxD,OAAOG,QAAQ;IACnB,IAAIA,QAAQ,CAACO,MAAM,KAAK,CAAC,EAAE;MACvBR,GAAG,CAACK,KAAK,CAACX,WAAW,EAAE,CAACQ,MAAM,EAAEC,IAAI,CAAC,CAAC;IAC1C,CAAC,MACI,IAAIF,QAAQ,CAACO,MAAM,GAAGV,cAAc,EAAE;MACvCE,GAAG,CAACK,KAAK,CAACV,cAAc,EAAE,CAACO,MAAM,EAAEC,IAAI,CAAC,CAAC;IAC7C;EACJ,CAAC,MACI;IACDH,GAAG,CAACK,KAAK,CAACT,aAAa,EAAE,CAACM,MAAM,EAAEC,IAAI,CAAC,CAAC;EAC5C;EACA,OAAO,KAAK;AAChB;AACA,OAAO,SAASM,WAAW,CAACT,GAAG,EAAEC,QAAQ,EAAEC,MAAM,EAAE;EAC/C,IAAId,QAAQ,CAACa,QAAQ,CAAC,EAAE;IACpB;IACA,IAAIS,WAAW,GAAGX,gBAAgB,CAACC,GAAG,EAAEC,QAAQ,CAACS,WAAW,EAAER,MAAM,EAAE,aAAa,CAAC;IACpF,IAAIS,YAAY,GAAGZ,gBAAgB,CAACC,GAAG,EAAEC,QAAQ,CAACU,YAAY,EAAET,MAAM,EAAE,cAAc,CAAC;IACvF,IAAIQ,WAAW,IAAIC,YAAY,EAC3B,OAAO;MACHD,WAAW,EAAEA,WAAW;MACxBC,YAAY,EAAEA;IAClB,CAAC;IACLX,GAAG,CAACK,KAAK,CAACR,wBAAwB,EAAE,CAACK,MAAM,CAAC,CAAC;IAC7C,OAAO,KAAK;EAChB,CAAC,MACI;IACD,OAAOH,gBAAgB,CAACC,GAAG,EAAEC,QAAQ,EAAEC,MAAM,EAAE,KAAK,CAAC;EACzD;AACJ"},"metadata":{},"sourceType":"module"}