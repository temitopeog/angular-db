{"ast":null,"code":"/**\n * wraps a given promise in a new one with a default onRejected function,\n * that handles the promise rejection if not other onRejected handler is provided.\n *\n * Caveats:\n *  - There are some cases where the `defaultOnRejected` handler is not invoked\n * and the promise rejection must be handled by the user (same as the Promise spec):\n *    - using async/await syntax with a transpiler to Promises\n *    - setting an `onFinally` handler as the first handler (e.g. `promiseWrapper(Promise.reject()).finally(...)`)\n *    - setting more than one handler with at least one of them being an onRejected handler\n *  - If the wrapped promise is rejected when using native async/await syntax, the `defaultOnRejected` handler is invoked\n * and neither the catch block nor the remaining try block are executed.\n *\n * @param customPromise promise to wrap\n * @param defaultOnRejected default onRejected function\n * @returns a promise that doesn't need to be handled for rejection (except when using async/await syntax) and\n * includes a method named `hasOnFulfilled` that returns true if the promise has attached an onFulfilled handler.\n */\nexport function promiseWrapper(customPromise, defaultOnRejected) {\n  var hasOnFulfilled = false;\n  var hasOnRejected = false;\n  function chain(promise) {\n    var newPromise = new Promise(function (res, rej) {\n      return promise.then(res, function (value) {\n        if (hasOnRejected) {\n          rej(value);\n        } else {\n          defaultOnRejected(value);\n        }\n      });\n    });\n    var originalThen = newPromise.then;\n    // Using `defineProperty` in case Promise.prototype.then property is not writable\n    Object.defineProperty(newPromise, 'then', {\n      value: function (onfulfilled, onrejected) {\n        var result = originalThen.call(newPromise, onfulfilled, onrejected);\n        if (typeof onfulfilled === 'function') hasOnFulfilled = true;\n        if (typeof onrejected === 'function') {\n          hasOnRejected = true;\n          return result;\n        } else {\n          return chain(result);\n        }\n      }\n    });\n    return newPromise;\n  }\n  var result = chain(customPromise);\n  result.hasOnFulfilled = function () {\n    return hasOnFulfilled;\n  };\n  return result;\n}","map":{"version":3,"names":["promiseWrapper","customPromise","defaultOnRejected","hasOnFulfilled","hasOnRejected","chain","promise","newPromise","Promise","res","rej","then","value","originalThen","Object","defineProperty","onfulfilled","onrejected","result","call"],"sources":["/Users/temitopeogunrekun/Desktop/angular-db/node_modules/@splitsoftware/splitio-commons/esm/utils/promise/wrapper.js"],"sourcesContent":["/**\n * wraps a given promise in a new one with a default onRejected function,\n * that handles the promise rejection if not other onRejected handler is provided.\n *\n * Caveats:\n *  - There are some cases where the `defaultOnRejected` handler is not invoked\n * and the promise rejection must be handled by the user (same as the Promise spec):\n *    - using async/await syntax with a transpiler to Promises\n *    - setting an `onFinally` handler as the first handler (e.g. `promiseWrapper(Promise.reject()).finally(...)`)\n *    - setting more than one handler with at least one of them being an onRejected handler\n *  - If the wrapped promise is rejected when using native async/await syntax, the `defaultOnRejected` handler is invoked\n * and neither the catch block nor the remaining try block are executed.\n *\n * @param customPromise promise to wrap\n * @param defaultOnRejected default onRejected function\n * @returns a promise that doesn't need to be handled for rejection (except when using async/await syntax) and\n * includes a method named `hasOnFulfilled` that returns true if the promise has attached an onFulfilled handler.\n */\nexport function promiseWrapper(customPromise, defaultOnRejected) {\n    var hasOnFulfilled = false;\n    var hasOnRejected = false;\n    function chain(promise) {\n        var newPromise = new Promise(function (res, rej) {\n            return promise.then(res, function (value) {\n                if (hasOnRejected) {\n                    rej(value);\n                }\n                else {\n                    defaultOnRejected(value);\n                }\n            });\n        });\n        var originalThen = newPromise.then;\n        // Using `defineProperty` in case Promise.prototype.then property is not writable\n        Object.defineProperty(newPromise, 'then', {\n            value: function (onfulfilled, onrejected) {\n                var result = originalThen.call(newPromise, onfulfilled, onrejected);\n                if (typeof onfulfilled === 'function')\n                    hasOnFulfilled = true;\n                if (typeof onrejected === 'function') {\n                    hasOnRejected = true;\n                    return result;\n                }\n                else {\n                    return chain(result);\n                }\n            }\n        });\n        return newPromise;\n    }\n    var result = chain(customPromise);\n    result.hasOnFulfilled = function () { return hasOnFulfilled; };\n    return result;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,cAAc,CAACC,aAAa,EAAEC,iBAAiB,EAAE;EAC7D,IAAIC,cAAc,GAAG,KAAK;EAC1B,IAAIC,aAAa,GAAG,KAAK;EACzB,SAASC,KAAK,CAACC,OAAO,EAAE;IACpB,IAAIC,UAAU,GAAG,IAAIC,OAAO,CAAC,UAAUC,GAAG,EAAEC,GAAG,EAAE;MAC7C,OAAOJ,OAAO,CAACK,IAAI,CAACF,GAAG,EAAE,UAAUG,KAAK,EAAE;QACtC,IAAIR,aAAa,EAAE;UACfM,GAAG,CAACE,KAAK,CAAC;QACd,CAAC,MACI;UACDV,iBAAiB,CAACU,KAAK,CAAC;QAC5B;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;IACF,IAAIC,YAAY,GAAGN,UAAU,CAACI,IAAI;IAClC;IACAG,MAAM,CAACC,cAAc,CAACR,UAAU,EAAE,MAAM,EAAE;MACtCK,KAAK,EAAE,UAAUI,WAAW,EAAEC,UAAU,EAAE;QACtC,IAAIC,MAAM,GAAGL,YAAY,CAACM,IAAI,CAACZ,UAAU,EAAES,WAAW,EAAEC,UAAU,CAAC;QACnE,IAAI,OAAOD,WAAW,KAAK,UAAU,EACjCb,cAAc,GAAG,IAAI;QACzB,IAAI,OAAOc,UAAU,KAAK,UAAU,EAAE;UAClCb,aAAa,GAAG,IAAI;UACpB,OAAOc,MAAM;QACjB,CAAC,MACI;UACD,OAAOb,KAAK,CAACa,MAAM,CAAC;QACxB;MACJ;IACJ,CAAC,CAAC;IACF,OAAOX,UAAU;EACrB;EACA,IAAIW,MAAM,GAAGb,KAAK,CAACJ,aAAa,CAAC;EACjCiB,MAAM,CAACf,cAAc,GAAG,YAAY;IAAE,OAAOA,cAAc;EAAE,CAAC;EAC9D,OAAOe,MAAM;AACjB"},"metadata":{},"sourceType":"module"}