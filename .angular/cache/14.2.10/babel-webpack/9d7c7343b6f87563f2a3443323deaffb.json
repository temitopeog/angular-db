{"ast":null,"code":"import { findIndex } from '../../utils/lang';\nimport { thenable } from '../../utils/promise/thenable';\nimport { ENGINE_COMBINER_AND } from '../../logger/constants';\nexport function andCombinerContext(log, matchers) {\n  function andResults(results) {\n    // Array.prototype.every is supported by target environments\n    var hasMatchedAll = results.every(function (value) {\n      return value;\n    });\n    log.debug(ENGINE_COMBINER_AND, [hasMatchedAll]);\n    return hasMatchedAll;\n  }\n  return function andCombiner() {\n    var params = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      params[_i] = arguments[_i];\n    }\n    var matcherResults = matchers.map(function (matcher) {\n      return matcher.apply(void 0, params);\n    });\n    // If any matching result is a thenable we should use Promise.all\n    if (findIndex(matcherResults, thenable) !== -1) {\n      return Promise.all(matcherResults).then(andResults);\n    } else {\n      return andResults(matcherResults);\n    }\n  };\n}","map":{"version":3,"names":["findIndex","thenable","ENGINE_COMBINER_AND","andCombinerContext","log","matchers","andResults","results","hasMatchedAll","every","value","debug","andCombiner","params","_i","arguments","length","matcherResults","map","matcher","apply","Promise","all","then"],"sources":["/Users/temitopeogunrekun/Desktop/angular-db/node_modules/@splitsoftware/splitio-commons/esm/evaluator/combiners/and.js"],"sourcesContent":["import { findIndex } from '../../utils/lang';\nimport { thenable } from '../../utils/promise/thenable';\nimport { ENGINE_COMBINER_AND } from '../../logger/constants';\nexport function andCombinerContext(log, matchers) {\n    function andResults(results) {\n        // Array.prototype.every is supported by target environments\n        var hasMatchedAll = results.every(function (value) { return value; });\n        log.debug(ENGINE_COMBINER_AND, [hasMatchedAll]);\n        return hasMatchedAll;\n    }\n    return function andCombiner() {\n        var params = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            params[_i] = arguments[_i];\n        }\n        var matcherResults = matchers.map(function (matcher) { return matcher.apply(void 0, params); });\n        // If any matching result is a thenable we should use Promise.all\n        if (findIndex(matcherResults, thenable) !== -1) {\n            return Promise.all(matcherResults).then(andResults);\n        }\n        else {\n            return andResults(matcherResults);\n        }\n    };\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,QAAQ,8BAA8B;AACvD,SAASC,mBAAmB,QAAQ,wBAAwB;AAC5D,OAAO,SAASC,kBAAkB,CAACC,GAAG,EAAEC,QAAQ,EAAE;EAC9C,SAASC,UAAU,CAACC,OAAO,EAAE;IACzB;IACA,IAAIC,aAAa,GAAGD,OAAO,CAACE,KAAK,CAAC,UAAUC,KAAK,EAAE;MAAE,OAAOA,KAAK;IAAE,CAAC,CAAC;IACrEN,GAAG,CAACO,KAAK,CAACT,mBAAmB,EAAE,CAACM,aAAa,CAAC,CAAC;IAC/C,OAAOA,aAAa;EACxB;EACA,OAAO,SAASI,WAAW,GAAG;IAC1B,IAAIC,MAAM,GAAG,EAAE;IACf,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGC,SAAS,CAACC,MAAM,EAAEF,EAAE,EAAE,EAAE;MAC1CD,MAAM,CAACC,EAAE,CAAC,GAAGC,SAAS,CAACD,EAAE,CAAC;IAC9B;IACA,IAAIG,cAAc,GAAGZ,QAAQ,CAACa,GAAG,CAAC,UAAUC,OAAO,EAAE;MAAE,OAAOA,OAAO,CAACC,KAAK,CAAC,KAAK,CAAC,EAAEP,MAAM,CAAC;IAAE,CAAC,CAAC;IAC/F;IACA,IAAIb,SAAS,CAACiB,cAAc,EAAEhB,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;MAC5C,OAAOoB,OAAO,CAACC,GAAG,CAACL,cAAc,CAAC,CAACM,IAAI,CAACjB,UAAU,CAAC;IACvD,CAAC,MACI;MACD,OAAOA,UAAU,CAACW,cAAc,CAAC;IACrC;EACJ,CAAC;AACL"},"metadata":{},"sourceType":"module"}