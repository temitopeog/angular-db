{"ast":null,"code":"export var matcherTypes = {\n  UNDEFINED: 0,\n  ALL_KEYS: 1,\n  IN_SEGMENT: 2,\n  WHITELIST: 3,\n  EQUAL_TO: 4,\n  GREATER_THAN_OR_EQUAL_TO: 5,\n  LESS_THAN_OR_EQUAL_TO: 6,\n  BETWEEN: 7,\n  EQUAL_TO_SET: 8,\n  CONTAINS_ANY_OF_SET: 9,\n  CONTAINS_ALL_OF_SET: 10,\n  PART_OF_SET: 11,\n  ENDS_WITH: 12,\n  STARTS_WITH: 13,\n  CONTAINS_STRING: 14,\n  IN_SPLIT_TREATMENT: 15,\n  EQUAL_TO_BOOLEAN: 16,\n  MATCHES_STRING: 17\n};\nexport var matcherDataTypes = {\n  BOOLEAN: 'BOOLEAN',\n  STRING: 'STRING',\n  NUMBER: 'NUMBER',\n  SET: 'SET',\n  DATETIME: 'DATETIME',\n  NOT_SPECIFIED: 'NOT_SPECIFIED'\n};\nexport function matcherTypesMapper(matcherType) {\n  var type = matcherTypes[matcherType];\n  if (type) return type;else return matcherTypes.UNDEFINED;\n}","map":{"version":3,"names":["matcherTypes","UNDEFINED","ALL_KEYS","IN_SEGMENT","WHITELIST","EQUAL_TO","GREATER_THAN_OR_EQUAL_TO","LESS_THAN_OR_EQUAL_TO","BETWEEN","EQUAL_TO_SET","CONTAINS_ANY_OF_SET","CONTAINS_ALL_OF_SET","PART_OF_SET","ENDS_WITH","STARTS_WITH","CONTAINS_STRING","IN_SPLIT_TREATMENT","EQUAL_TO_BOOLEAN","MATCHES_STRING","matcherDataTypes","BOOLEAN","STRING","NUMBER","SET","DATETIME","NOT_SPECIFIED","matcherTypesMapper","matcherType","type"],"sources":["/Users/temitopeogunrekun/Desktop/angular-db/node_modules/@splitsoftware/splitio-commons/esm/evaluator/matchers/matcherTypes.js"],"sourcesContent":["export var matcherTypes = {\n    UNDEFINED: 0,\n    ALL_KEYS: 1,\n    IN_SEGMENT: 2,\n    WHITELIST: 3,\n    EQUAL_TO: 4,\n    GREATER_THAN_OR_EQUAL_TO: 5,\n    LESS_THAN_OR_EQUAL_TO: 6,\n    BETWEEN: 7,\n    EQUAL_TO_SET: 8,\n    CONTAINS_ANY_OF_SET: 9,\n    CONTAINS_ALL_OF_SET: 10,\n    PART_OF_SET: 11,\n    ENDS_WITH: 12,\n    STARTS_WITH: 13,\n    CONTAINS_STRING: 14,\n    IN_SPLIT_TREATMENT: 15,\n    EQUAL_TO_BOOLEAN: 16,\n    MATCHES_STRING: 17\n};\nexport var matcherDataTypes = {\n    BOOLEAN: 'BOOLEAN',\n    STRING: 'STRING',\n    NUMBER: 'NUMBER',\n    SET: 'SET',\n    DATETIME: 'DATETIME',\n    NOT_SPECIFIED: 'NOT_SPECIFIED'\n};\nexport function matcherTypesMapper(matcherType) {\n    var type = matcherTypes[matcherType];\n    if (type)\n        return type;\n    else\n        return matcherTypes.UNDEFINED;\n}\n"],"mappings":"AAAA,OAAO,IAAIA,YAAY,GAAG;EACtBC,SAAS,EAAE,CAAC;EACZC,QAAQ,EAAE,CAAC;EACXC,UAAU,EAAE,CAAC;EACbC,SAAS,EAAE,CAAC;EACZC,QAAQ,EAAE,CAAC;EACXC,wBAAwB,EAAE,CAAC;EAC3BC,qBAAqB,EAAE,CAAC;EACxBC,OAAO,EAAE,CAAC;EACVC,YAAY,EAAE,CAAC;EACfC,mBAAmB,EAAE,CAAC;EACtBC,mBAAmB,EAAE,EAAE;EACvBC,WAAW,EAAE,EAAE;EACfC,SAAS,EAAE,EAAE;EACbC,WAAW,EAAE,EAAE;EACfC,eAAe,EAAE,EAAE;EACnBC,kBAAkB,EAAE,EAAE;EACtBC,gBAAgB,EAAE,EAAE;EACpBC,cAAc,EAAE;AACpB,CAAC;AACD,OAAO,IAAIC,gBAAgB,GAAG;EAC1BC,OAAO,EAAE,SAAS;EAClBC,MAAM,EAAE,QAAQ;EAChBC,MAAM,EAAE,QAAQ;EAChBC,GAAG,EAAE,KAAK;EACVC,QAAQ,EAAE,UAAU;EACpBC,aAAa,EAAE;AACnB,CAAC;AACD,OAAO,SAASC,kBAAkB,CAACC,WAAW,EAAE;EAC5C,IAAIC,IAAI,GAAG5B,YAAY,CAAC2B,WAAW,CAAC;EACpC,IAAIC,IAAI,EACJ,OAAOA,IAAI,CAAC,KAEZ,OAAO5B,YAAY,CAACC,SAAS;AACrC"},"metadata":{},"sourceType":"module"}