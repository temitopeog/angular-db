{"ast":null,"code":"import { syncTaskFactory } from '../syncTask';\nimport { SUBMITTERS_PUSH, SUBMITTERS_PUSH_FAILS, SUBMITTERS_PUSH_RETRY } from '../../logger/constants';\n/**\n * Base function to create submitters, such as ImpressionsSubmitter and EventsSubmitter\n */\nexport function submitterFactory(log, postClient, sourceCache, postRate, dataName, fromCacheToPayload, maxRetries, debugLogs // true for telemetry submitters\n) {\n  if (maxRetries === void 0) {\n    maxRetries = 0;\n  }\n  var retries = 0;\n  var data;\n  function postData() {\n    if (sourceCache.isEmpty() && !data) return Promise.resolve();\n    data = sourceCache.pop(data);\n    var dataCountMessage = typeof data.length === 'number' ? data.length + \" \" + dataName : dataName;\n    log[debugLogs ? 'debug' : 'info'](SUBMITTERS_PUSH, [dataCountMessage]);\n    var jsonPayload = JSON.stringify(fromCacheToPayload ? fromCacheToPayload(data) : data);\n    if (!maxRetries) data = undefined;\n    return postClient(jsonPayload).then(function () {\n      retries = 0;\n      data = undefined;\n    }).catch(function (err) {\n      if (!maxRetries) {\n        log[debugLogs ? 'debug' : 'warn'](SUBMITTERS_PUSH_FAILS, [dataCountMessage, err]);\n      } else if (retries === maxRetries) {\n        retries = 0;\n        data = undefined;\n        log[debugLogs ? 'debug' : 'warn'](SUBMITTERS_PUSH_FAILS, [dataCountMessage, err]);\n      } else {\n        retries++;\n        log[debugLogs ? 'debug' : 'warn'](SUBMITTERS_PUSH_RETRY, [dataCountMessage, err]);\n      }\n    });\n  }\n  return syncTaskFactory(log, postData, postRate, dataName + ' submitter');\n}\n/**\n * Decorates a provided submitter with a first execution window\n */\nexport function firstPushWindowDecorator(submitter, firstPushWindow) {\n  var running = false;\n  var stopEventPublisherTimeout;\n  var originalStart = submitter.start;\n  submitter.start = function () {\n    running = true;\n    stopEventPublisherTimeout = setTimeout(originalStart, firstPushWindow);\n  };\n  var originalStop = submitter.stop;\n  submitter.stop = function () {\n    running = false;\n    clearTimeout(stopEventPublisherTimeout);\n    originalStop();\n  };\n  submitter.isRunning = function () {\n    return running;\n  };\n  return submitter;\n}","map":{"version":3,"names":["syncTaskFactory","SUBMITTERS_PUSH","SUBMITTERS_PUSH_FAILS","SUBMITTERS_PUSH_RETRY","submitterFactory","log","postClient","sourceCache","postRate","dataName","fromCacheToPayload","maxRetries","debugLogs","retries","data","postData","isEmpty","Promise","resolve","pop","dataCountMessage","length","jsonPayload","JSON","stringify","undefined","then","catch","err","firstPushWindowDecorator","submitter","firstPushWindow","running","stopEventPublisherTimeout","originalStart","start","setTimeout","originalStop","stop","clearTimeout","isRunning"],"sources":["/Users/temitopeogunrekun/Desktop/angular-db/node_modules/@splitsoftware/splitio-commons/esm/sync/submitters/submitter.js"],"sourcesContent":["import { syncTaskFactory } from '../syncTask';\nimport { SUBMITTERS_PUSH, SUBMITTERS_PUSH_FAILS, SUBMITTERS_PUSH_RETRY } from '../../logger/constants';\n/**\n * Base function to create submitters, such as ImpressionsSubmitter and EventsSubmitter\n */\nexport function submitterFactory(log, postClient, sourceCache, postRate, dataName, fromCacheToPayload, maxRetries, debugLogs // true for telemetry submitters\n) {\n    if (maxRetries === void 0) { maxRetries = 0; }\n    var retries = 0;\n    var data;\n    function postData() {\n        if (sourceCache.isEmpty() && !data)\n            return Promise.resolve();\n        data = sourceCache.pop(data);\n        var dataCountMessage = typeof data.length === 'number' ? data.length + \" \" + dataName : dataName;\n        log[debugLogs ? 'debug' : 'info'](SUBMITTERS_PUSH, [dataCountMessage]);\n        var jsonPayload = JSON.stringify(fromCacheToPayload ? fromCacheToPayload(data) : data);\n        if (!maxRetries)\n            data = undefined;\n        return postClient(jsonPayload).then(function () {\n            retries = 0;\n            data = undefined;\n        }).catch(function (err) {\n            if (!maxRetries) {\n                log[debugLogs ? 'debug' : 'warn'](SUBMITTERS_PUSH_FAILS, [dataCountMessage, err]);\n            }\n            else if (retries === maxRetries) {\n                retries = 0;\n                data = undefined;\n                log[debugLogs ? 'debug' : 'warn'](SUBMITTERS_PUSH_FAILS, [dataCountMessage, err]);\n            }\n            else {\n                retries++;\n                log[debugLogs ? 'debug' : 'warn'](SUBMITTERS_PUSH_RETRY, [dataCountMessage, err]);\n            }\n        });\n    }\n    return syncTaskFactory(log, postData, postRate, dataName + ' submitter');\n}\n/**\n * Decorates a provided submitter with a first execution window\n */\nexport function firstPushWindowDecorator(submitter, firstPushWindow) {\n    var running = false;\n    var stopEventPublisherTimeout;\n    var originalStart = submitter.start;\n    submitter.start = function () {\n        running = true;\n        stopEventPublisherTimeout = setTimeout(originalStart, firstPushWindow);\n    };\n    var originalStop = submitter.stop;\n    submitter.stop = function () {\n        running = false;\n        clearTimeout(stopEventPublisherTimeout);\n        originalStop();\n    };\n    submitter.isRunning = function () {\n        return running;\n    };\n    return submitter;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}