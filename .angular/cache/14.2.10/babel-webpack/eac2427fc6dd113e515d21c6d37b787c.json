{"ast":null,"code":"import * as c from '../constants';\nimport { codesInfo } from './info';\nexport var codesDebug = codesInfo.concat([\n// evaluator\n[c.ENGINE_COMBINER_AND, c.LOG_PREFIX_ENGINE_COMBINER + '[andCombiner] evaluates to %s'], [c.ENGINE_COMBINER_IFELSEIF, c.LOG_PREFIX_ENGINE_COMBINER + 'Treatment found: %s'], [c.ENGINE_COMBINER_IFELSEIF_NO_TREATMENT, c.LOG_PREFIX_ENGINE_COMBINER + 'All predicates evaluated, no treatment found.'], [c.ENGINE_BUCKET, c.LOG_PREFIX_ENGINE + ': using algo \"murmur\" bucket %s for key %s using seed %s - treatment %s'], [c.ENGINE_MATCHER_ALL, c.LOG_PREFIX_ENGINE_MATCHER + '[allMatcher] is always true'], [c.ENGINE_MATCHER_BETWEEN, c.LOG_PREFIX_ENGINE_MATCHER + '[betweenMatcher] is %s between %s and %s? %s'], [c.ENGINE_MATCHER_BOOLEAN, c.LOG_PREFIX_ENGINE_MATCHER + '[booleanMatcher] %s === %s'], [c.ENGINE_MATCHER_CONTAINS_ALL, c.LOG_PREFIX_ENGINE_MATCHER + '[containsAllMatcher] %s contains all elements of %s? %s'], [c.ENGINE_MATCHER_CONTAINS_ANY, c.LOG_PREFIX_ENGINE_MATCHER + '[containsAnyMatcher] %s contains at least an element of %s? %s'], [c.ENGINE_MATCHER_CONTAINS_STRING, c.LOG_PREFIX_ENGINE_MATCHER + '[containsStringMatcher] %s contains %s? %s'], [c.ENGINE_MATCHER_DEPENDENCY, c.LOG_PREFIX_ENGINE_MATCHER + '[dependencyMatcher] parent split \"%s\" evaluated to \"%s\" with label \"%s\". %s evaluated treatment is part of [%s] ? %s.'], [c.ENGINE_MATCHER_DEPENDENCY_PRE, c.LOG_PREFIX_ENGINE_MATCHER + '[dependencyMatcher] will evaluate parent split: \"%s\" with key: %s %s'], [c.ENGINE_MATCHER_EQUAL, c.LOG_PREFIX_ENGINE_MATCHER + '[equalToMatcher] is %s equal to %s? %s'], [c.ENGINE_MATCHER_EQUAL_TO_SET, c.LOG_PREFIX_ENGINE_MATCHER + '[equalToSetMatcher] is %s equal to set %s? %s'], [c.ENGINE_MATCHER_ENDS_WITH, c.LOG_PREFIX_ENGINE_MATCHER + '[endsWithMatcher] %s ends with %s? %s'], [c.ENGINE_MATCHER_GREATER, c.LOG_PREFIX_ENGINE_MATCHER + '[greaterThanEqualMatcher] is %s greater than %s? %s'], [c.ENGINE_MATCHER_LESS, c.LOG_PREFIX_ENGINE_MATCHER + '[lessThanEqualMatcher] is %s less than %s? %s'], [c.ENGINE_MATCHER_PART_OF, c.LOG_PREFIX_ENGINE_MATCHER + '[partOfMatcher] %s is part of %s? %s'], [c.ENGINE_MATCHER_SEGMENT, c.LOG_PREFIX_ENGINE_MATCHER + '[segmentMatcher] evaluated %s / %s => %s'], [c.ENGINE_MATCHER_STRING, c.LOG_PREFIX_ENGINE_MATCHER + '[stringMatcher] does %s matches with %s? %s'], [c.ENGINE_MATCHER_STRING_INVALID, c.LOG_PREFIX_ENGINE_MATCHER + '[stringMatcher] %s is an invalid regex'], [c.ENGINE_MATCHER_STARTS_WITH, c.LOG_PREFIX_ENGINE_MATCHER + '[startsWithMatcher] %s starts with %s? %s'], [c.ENGINE_MATCHER_WHITELIST, c.LOG_PREFIX_ENGINE_MATCHER + '[whitelistMatcher] evaluated %s in [%s] => %s'], [c.ENGINE_VALUE, c.LOG_PREFIX_ENGINE_VALUE + 'Extracted attribute [%s], [%s] will be used for matching.'], [c.ENGINE_SANITIZE, c.LOG_PREFIX_ENGINE + ':sanitize: Attempted to sanitize [%s] which should be of type [%s]. Sanitized and processed value => [%s]'],\n// SDK\n[c.CLEANUP_REGISTERING, c.LOG_PREFIX_CLEANUP + 'Registering cleanup handler %s'], [c.CLEANUP_DEREGISTERING, c.LOG_PREFIX_CLEANUP + 'Deregistering cleanup handler %s'], [c.RETRIEVE_CLIENT_DEFAULT, 'Retrieving default SDK client.'], [c.RETRIEVE_CLIENT_EXISTING, 'Retrieving existing SDK client.'], [c.RETRIEVE_MANAGER, 'Retrieving manager instance.'],\n// synchronizer\n[c.SYNC_OFFLINE_DATA, c.LOG_PREFIX_SYNC_OFFLINE + 'Splits data: \\n%s'], [c.SYNC_SPLITS_FETCH, c.LOG_PREFIX_SYNC_SPLITS + 'Spin up split update using since = %s'], [c.SYNC_SPLITS_NEW, c.LOG_PREFIX_SYNC_SPLITS + 'New splits %s'], [c.SYNC_SPLITS_REMOVED, c.LOG_PREFIX_SYNC_SPLITS + 'Removed splits %s'], [c.SYNC_SPLITS_SEGMENTS, c.LOG_PREFIX_SYNC_SPLITS + 'Segment names collected %s'], [c.STREAMING_NEW_MESSAGE, c.LOG_PREFIX_SYNC_STREAMING + 'New SSE message received, with data: %s.'], [c.SYNC_TASK_START, c.LOG_PREFIX_SYNC + ': Starting %s. Running each %s millis'], [c.SYNC_TASK_EXECUTE, c.LOG_PREFIX_SYNC + ': Running %s'], [c.SYNC_TASK_STOP, c.LOG_PREFIX_SYNC + ': Stopping %s'],\n// initialization / settings validation\n[c.SETTINGS_SPLITS_FILTER, c.LOG_PREFIX_SETTINGS + ': splits filtering criteria is \"%s\".']]);","map":{"version":3,"names":["c","codesInfo","codesDebug","concat","ENGINE_COMBINER_AND","LOG_PREFIX_ENGINE_COMBINER","ENGINE_COMBINER_IFELSEIF","ENGINE_COMBINER_IFELSEIF_NO_TREATMENT","ENGINE_BUCKET","LOG_PREFIX_ENGINE","ENGINE_MATCHER_ALL","LOG_PREFIX_ENGINE_MATCHER","ENGINE_MATCHER_BETWEEN","ENGINE_MATCHER_BOOLEAN","ENGINE_MATCHER_CONTAINS_ALL","ENGINE_MATCHER_CONTAINS_ANY","ENGINE_MATCHER_CONTAINS_STRING","ENGINE_MATCHER_DEPENDENCY","ENGINE_MATCHER_DEPENDENCY_PRE","ENGINE_MATCHER_EQUAL","ENGINE_MATCHER_EQUAL_TO_SET","ENGINE_MATCHER_ENDS_WITH","ENGINE_MATCHER_GREATER","ENGINE_MATCHER_LESS","ENGINE_MATCHER_PART_OF","ENGINE_MATCHER_SEGMENT","ENGINE_MATCHER_STRING","ENGINE_MATCHER_STRING_INVALID","ENGINE_MATCHER_STARTS_WITH","ENGINE_MATCHER_WHITELIST","ENGINE_VALUE","LOG_PREFIX_ENGINE_VALUE","ENGINE_SANITIZE","CLEANUP_REGISTERING","LOG_PREFIX_CLEANUP","CLEANUP_DEREGISTERING","RETRIEVE_CLIENT_DEFAULT","RETRIEVE_CLIENT_EXISTING","RETRIEVE_MANAGER","SYNC_OFFLINE_DATA","LOG_PREFIX_SYNC_OFFLINE","SYNC_SPLITS_FETCH","LOG_PREFIX_SYNC_SPLITS","SYNC_SPLITS_NEW","SYNC_SPLITS_REMOVED","SYNC_SPLITS_SEGMENTS","STREAMING_NEW_MESSAGE","LOG_PREFIX_SYNC_STREAMING","SYNC_TASK_START","LOG_PREFIX_SYNC","SYNC_TASK_EXECUTE","SYNC_TASK_STOP","SETTINGS_SPLITS_FILTER","LOG_PREFIX_SETTINGS"],"sources":["/Users/temitopeogunrekun/Desktop/angular-db/node_modules/@splitsoftware/splitio-commons/esm/logger/messages/debug.js"],"sourcesContent":["import * as c from '../constants';\nimport { codesInfo } from './info';\nexport var codesDebug = codesInfo.concat([\n    // evaluator\n    [c.ENGINE_COMBINER_AND, c.LOG_PREFIX_ENGINE_COMBINER + '[andCombiner] evaluates to %s'],\n    [c.ENGINE_COMBINER_IFELSEIF, c.LOG_PREFIX_ENGINE_COMBINER + 'Treatment found: %s'],\n    [c.ENGINE_COMBINER_IFELSEIF_NO_TREATMENT, c.LOG_PREFIX_ENGINE_COMBINER + 'All predicates evaluated, no treatment found.'],\n    [c.ENGINE_BUCKET, c.LOG_PREFIX_ENGINE + ': using algo \"murmur\" bucket %s for key %s using seed %s - treatment %s'],\n    [c.ENGINE_MATCHER_ALL, c.LOG_PREFIX_ENGINE_MATCHER + '[allMatcher] is always true'],\n    [c.ENGINE_MATCHER_BETWEEN, c.LOG_PREFIX_ENGINE_MATCHER + '[betweenMatcher] is %s between %s and %s? %s'],\n    [c.ENGINE_MATCHER_BOOLEAN, c.LOG_PREFIX_ENGINE_MATCHER + '[booleanMatcher] %s === %s'],\n    [c.ENGINE_MATCHER_CONTAINS_ALL, c.LOG_PREFIX_ENGINE_MATCHER + '[containsAllMatcher] %s contains all elements of %s? %s'],\n    [c.ENGINE_MATCHER_CONTAINS_ANY, c.LOG_PREFIX_ENGINE_MATCHER + '[containsAnyMatcher] %s contains at least an element of %s? %s'],\n    [c.ENGINE_MATCHER_CONTAINS_STRING, c.LOG_PREFIX_ENGINE_MATCHER + '[containsStringMatcher] %s contains %s? %s'],\n    [c.ENGINE_MATCHER_DEPENDENCY, c.LOG_PREFIX_ENGINE_MATCHER + '[dependencyMatcher] parent split \"%s\" evaluated to \"%s\" with label \"%s\". %s evaluated treatment is part of [%s] ? %s.'],\n    [c.ENGINE_MATCHER_DEPENDENCY_PRE, c.LOG_PREFIX_ENGINE_MATCHER + '[dependencyMatcher] will evaluate parent split: \"%s\" with key: %s %s'],\n    [c.ENGINE_MATCHER_EQUAL, c.LOG_PREFIX_ENGINE_MATCHER + '[equalToMatcher] is %s equal to %s? %s'],\n    [c.ENGINE_MATCHER_EQUAL_TO_SET, c.LOG_PREFIX_ENGINE_MATCHER + '[equalToSetMatcher] is %s equal to set %s? %s'],\n    [c.ENGINE_MATCHER_ENDS_WITH, c.LOG_PREFIX_ENGINE_MATCHER + '[endsWithMatcher] %s ends with %s? %s'],\n    [c.ENGINE_MATCHER_GREATER, c.LOG_PREFIX_ENGINE_MATCHER + '[greaterThanEqualMatcher] is %s greater than %s? %s'],\n    [c.ENGINE_MATCHER_LESS, c.LOG_PREFIX_ENGINE_MATCHER + '[lessThanEqualMatcher] is %s less than %s? %s'],\n    [c.ENGINE_MATCHER_PART_OF, c.LOG_PREFIX_ENGINE_MATCHER + '[partOfMatcher] %s is part of %s? %s'],\n    [c.ENGINE_MATCHER_SEGMENT, c.LOG_PREFIX_ENGINE_MATCHER + '[segmentMatcher] evaluated %s / %s => %s'],\n    [c.ENGINE_MATCHER_STRING, c.LOG_PREFIX_ENGINE_MATCHER + '[stringMatcher] does %s matches with %s? %s'],\n    [c.ENGINE_MATCHER_STRING_INVALID, c.LOG_PREFIX_ENGINE_MATCHER + '[stringMatcher] %s is an invalid regex'],\n    [c.ENGINE_MATCHER_STARTS_WITH, c.LOG_PREFIX_ENGINE_MATCHER + '[startsWithMatcher] %s starts with %s? %s'],\n    [c.ENGINE_MATCHER_WHITELIST, c.LOG_PREFIX_ENGINE_MATCHER + '[whitelistMatcher] evaluated %s in [%s] => %s'],\n    [c.ENGINE_VALUE, c.LOG_PREFIX_ENGINE_VALUE + 'Extracted attribute [%s], [%s] will be used for matching.'],\n    [c.ENGINE_SANITIZE, c.LOG_PREFIX_ENGINE + ':sanitize: Attempted to sanitize [%s] which should be of type [%s]. Sanitized and processed value => [%s]'],\n    // SDK\n    [c.CLEANUP_REGISTERING, c.LOG_PREFIX_CLEANUP + 'Registering cleanup handler %s'],\n    [c.CLEANUP_DEREGISTERING, c.LOG_PREFIX_CLEANUP + 'Deregistering cleanup handler %s'],\n    [c.RETRIEVE_CLIENT_DEFAULT, 'Retrieving default SDK client.'],\n    [c.RETRIEVE_CLIENT_EXISTING, 'Retrieving existing SDK client.'],\n    [c.RETRIEVE_MANAGER, 'Retrieving manager instance.'],\n    // synchronizer\n    [c.SYNC_OFFLINE_DATA, c.LOG_PREFIX_SYNC_OFFLINE + 'Splits data: \\n%s'],\n    [c.SYNC_SPLITS_FETCH, c.LOG_PREFIX_SYNC_SPLITS + 'Spin up split update using since = %s'],\n    [c.SYNC_SPLITS_NEW, c.LOG_PREFIX_SYNC_SPLITS + 'New splits %s'],\n    [c.SYNC_SPLITS_REMOVED, c.LOG_PREFIX_SYNC_SPLITS + 'Removed splits %s'],\n    [c.SYNC_SPLITS_SEGMENTS, c.LOG_PREFIX_SYNC_SPLITS + 'Segment names collected %s'],\n    [c.STREAMING_NEW_MESSAGE, c.LOG_PREFIX_SYNC_STREAMING + 'New SSE message received, with data: %s.'],\n    [c.SYNC_TASK_START, c.LOG_PREFIX_SYNC + ': Starting %s. Running each %s millis'],\n    [c.SYNC_TASK_EXECUTE, c.LOG_PREFIX_SYNC + ': Running %s'],\n    [c.SYNC_TASK_STOP, c.LOG_PREFIX_SYNC + ': Stopping %s'],\n    // initialization / settings validation\n    [c.SETTINGS_SPLITS_FILTER, c.LOG_PREFIX_SETTINGS + ': splits filtering criteria is \"%s\".']\n]);\n"],"mappings":"AAAA,OAAO,KAAKA,CAAC,MAAM,cAAc;AACjC,SAASC,SAAS,QAAQ,QAAQ;AAClC,OAAO,IAAIC,UAAU,GAAGD,SAAS,CAACE,MAAM,CAAC;AACrC;AACA,CAACH,CAAC,CAACI,mBAAmB,EAAEJ,CAAC,CAACK,0BAA0B,GAAG,+BAA+B,CAAC,EACvF,CAACL,CAAC,CAACM,wBAAwB,EAAEN,CAAC,CAACK,0BAA0B,GAAG,qBAAqB,CAAC,EAClF,CAACL,CAAC,CAACO,qCAAqC,EAAEP,CAAC,CAACK,0BAA0B,GAAG,+CAA+C,CAAC,EACzH,CAACL,CAAC,CAACQ,aAAa,EAAER,CAAC,CAACS,iBAAiB,GAAG,yEAAyE,CAAC,EAClH,CAACT,CAAC,CAACU,kBAAkB,EAAEV,CAAC,CAACW,yBAAyB,GAAG,6BAA6B,CAAC,EACnF,CAACX,CAAC,CAACY,sBAAsB,EAAEZ,CAAC,CAACW,yBAAyB,GAAG,8CAA8C,CAAC,EACxG,CAACX,CAAC,CAACa,sBAAsB,EAAEb,CAAC,CAACW,yBAAyB,GAAG,4BAA4B,CAAC,EACtF,CAACX,CAAC,CAACc,2BAA2B,EAAEd,CAAC,CAACW,yBAAyB,GAAG,yDAAyD,CAAC,EACxH,CAACX,CAAC,CAACe,2BAA2B,EAAEf,CAAC,CAACW,yBAAyB,GAAG,gEAAgE,CAAC,EAC/H,CAACX,CAAC,CAACgB,8BAA8B,EAAEhB,CAAC,CAACW,yBAAyB,GAAG,4CAA4C,CAAC,EAC9G,CAACX,CAAC,CAACiB,yBAAyB,EAAEjB,CAAC,CAACW,yBAAyB,GAAG,uHAAuH,CAAC,EACpL,CAACX,CAAC,CAACkB,6BAA6B,EAAElB,CAAC,CAACW,yBAAyB,GAAG,sEAAsE,CAAC,EACvI,CAACX,CAAC,CAACmB,oBAAoB,EAAEnB,CAAC,CAACW,yBAAyB,GAAG,wCAAwC,CAAC,EAChG,CAACX,CAAC,CAACoB,2BAA2B,EAAEpB,CAAC,CAACW,yBAAyB,GAAG,+CAA+C,CAAC,EAC9G,CAACX,CAAC,CAACqB,wBAAwB,EAAErB,CAAC,CAACW,yBAAyB,GAAG,uCAAuC,CAAC,EACnG,CAACX,CAAC,CAACsB,sBAAsB,EAAEtB,CAAC,CAACW,yBAAyB,GAAG,qDAAqD,CAAC,EAC/G,CAACX,CAAC,CAACuB,mBAAmB,EAAEvB,CAAC,CAACW,yBAAyB,GAAG,+CAA+C,CAAC,EACtG,CAACX,CAAC,CAACwB,sBAAsB,EAAExB,CAAC,CAACW,yBAAyB,GAAG,sCAAsC,CAAC,EAChG,CAACX,CAAC,CAACyB,sBAAsB,EAAEzB,CAAC,CAACW,yBAAyB,GAAG,0CAA0C,CAAC,EACpG,CAACX,CAAC,CAAC0B,qBAAqB,EAAE1B,CAAC,CAACW,yBAAyB,GAAG,6CAA6C,CAAC,EACtG,CAACX,CAAC,CAAC2B,6BAA6B,EAAE3B,CAAC,CAACW,yBAAyB,GAAG,wCAAwC,CAAC,EACzG,CAACX,CAAC,CAAC4B,0BAA0B,EAAE5B,CAAC,CAACW,yBAAyB,GAAG,2CAA2C,CAAC,EACzG,CAACX,CAAC,CAAC6B,wBAAwB,EAAE7B,CAAC,CAACW,yBAAyB,GAAG,+CAA+C,CAAC,EAC3G,CAACX,CAAC,CAAC8B,YAAY,EAAE9B,CAAC,CAAC+B,uBAAuB,GAAG,2DAA2D,CAAC,EACzG,CAAC/B,CAAC,CAACgC,eAAe,EAAEhC,CAAC,CAACS,iBAAiB,GAAG,2GAA2G,CAAC;AACtJ;AACA,CAACT,CAAC,CAACiC,mBAAmB,EAAEjC,CAAC,CAACkC,kBAAkB,GAAG,gCAAgC,CAAC,EAChF,CAAClC,CAAC,CAACmC,qBAAqB,EAAEnC,CAAC,CAACkC,kBAAkB,GAAG,kCAAkC,CAAC,EACpF,CAAClC,CAAC,CAACoC,uBAAuB,EAAE,gCAAgC,CAAC,EAC7D,CAACpC,CAAC,CAACqC,wBAAwB,EAAE,iCAAiC,CAAC,EAC/D,CAACrC,CAAC,CAACsC,gBAAgB,EAAE,8BAA8B,CAAC;AACpD;AACA,CAACtC,CAAC,CAACuC,iBAAiB,EAAEvC,CAAC,CAACwC,uBAAuB,GAAG,mBAAmB,CAAC,EACtE,CAACxC,CAAC,CAACyC,iBAAiB,EAAEzC,CAAC,CAAC0C,sBAAsB,GAAG,uCAAuC,CAAC,EACzF,CAAC1C,CAAC,CAAC2C,eAAe,EAAE3C,CAAC,CAAC0C,sBAAsB,GAAG,eAAe,CAAC,EAC/D,CAAC1C,CAAC,CAAC4C,mBAAmB,EAAE5C,CAAC,CAAC0C,sBAAsB,GAAG,mBAAmB,CAAC,EACvE,CAAC1C,CAAC,CAAC6C,oBAAoB,EAAE7C,CAAC,CAAC0C,sBAAsB,GAAG,4BAA4B,CAAC,EACjF,CAAC1C,CAAC,CAAC8C,qBAAqB,EAAE9C,CAAC,CAAC+C,yBAAyB,GAAG,0CAA0C,CAAC,EACnG,CAAC/C,CAAC,CAACgD,eAAe,EAAEhD,CAAC,CAACiD,eAAe,GAAG,uCAAuC,CAAC,EAChF,CAACjD,CAAC,CAACkD,iBAAiB,EAAElD,CAAC,CAACiD,eAAe,GAAG,cAAc,CAAC,EACzD,CAACjD,CAAC,CAACmD,cAAc,EAAEnD,CAAC,CAACiD,eAAe,GAAG,eAAe,CAAC;AACvD;AACA,CAACjD,CAAC,CAACoD,sBAAsB,EAAEpD,CAAC,CAACqD,mBAAmB,GAAG,sCAAsC,CAAC,CAC7F,CAAC"},"metadata":{},"sourceType":"module"}