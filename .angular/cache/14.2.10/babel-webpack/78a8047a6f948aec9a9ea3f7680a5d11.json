{"ast":null,"code":"import { objectAssign } from '../utils/lang/objectAssign';\nimport { find } from '../utils/lang';\nimport { _Map } from '../utils/lang/maps';\nexport var LogLevels = {\n  DEBUG: 'DEBUG',\n  INFO: 'INFO',\n  WARN: 'WARN',\n  ERROR: 'ERROR',\n  NONE: 'NONE'\n};\nvar LogLevelIndexes = {\n  DEBUG: 1,\n  INFO: 2,\n  WARN: 3,\n  ERROR: 4,\n  NONE: 5\n};\nexport function isLogLevelString(str) {\n  return !!find(LogLevels, function (lvl) {\n    return str === lvl;\n  });\n}\n// exported for testing purposes only\nexport function _sprintf(format, args) {\n  if (format === void 0) {\n    format = '';\n  }\n  if (args === void 0) {\n    args = [];\n  }\n  var i = 0;\n  return format.replace(/%s/g, function () {\n    return args[i++];\n  });\n}\nvar defaultOptions = {\n  prefix: 'splitio',\n  logLevel: LogLevels.NONE,\n  showLevel: true\n};\nvar Logger = /** @class */function () {\n  function Logger(options, codes) {\n    this.options = objectAssign({}, defaultOptions, options);\n    this.codes = codes || new _Map();\n    this.logLevel = LogLevelIndexes[this.options.logLevel];\n  }\n  Logger.prototype.setLogLevel = function (logLevel) {\n    this.options.logLevel = logLevel;\n    this.logLevel = LogLevelIndexes[logLevel];\n  };\n  Logger.prototype.debug = function (msg, args) {\n    if (this._shouldLog(LogLevelIndexes.DEBUG)) this._log(LogLevels.DEBUG, msg, args);\n  };\n  Logger.prototype.info = function (msg, args) {\n    if (this._shouldLog(LogLevelIndexes.INFO)) this._log(LogLevels.INFO, msg, args);\n  };\n  Logger.prototype.warn = function (msg, args) {\n    if (this._shouldLog(LogLevelIndexes.WARN)) this._log(LogLevels.WARN, msg, args);\n  };\n  Logger.prototype.error = function (msg, args) {\n    if (this._shouldLog(LogLevelIndexes.ERROR)) this._log(LogLevels.ERROR, msg, args);\n  };\n  Logger.prototype._log = function (level, msg, args) {\n    if (typeof msg === 'number') {\n      var format = this.codes.get(msg);\n      msg = format ? _sprintf(format, args) : \"Message code \" + msg + (args ? ', with args: ' + args.toString() : '');\n    } else {\n      if (args) msg = _sprintf(msg, args);\n    }\n    var formattedText = this._generateLogMessage(level, msg);\n    console.log(formattedText);\n  };\n  Logger.prototype._generateLogMessage = function (level, text) {\n    var textPre = ' => ';\n    var result = '';\n    if (this.options.showLevel) {\n      result += '[' + level + ']' + (level === LogLevels.INFO || level === LogLevels.WARN ? ' ' : '') + ' ';\n    }\n    if (this.options.prefix) {\n      result += this.options.prefix + textPre;\n    }\n    return result += text;\n  };\n  Logger.prototype._shouldLog = function (level) {\n    return level >= this.logLevel;\n  };\n  return Logger;\n}();\nexport { Logger };","map":{"version":3,"names":["objectAssign","find","_Map","LogLevels","DEBUG","INFO","WARN","ERROR","NONE","LogLevelIndexes","isLogLevelString","str","lvl","_sprintf","format","args","i","replace","defaultOptions","prefix","logLevel","showLevel","Logger","options","codes","prototype","setLogLevel","debug","msg","_shouldLog","_log","info","warn","error","level","get","toString","formattedText","_generateLogMessage","console","log","text","textPre","result"],"sources":["/Users/temitopeogunrekun/Desktop/angular-db/node_modules/@splitsoftware/splitio-commons/esm/logger/index.js"],"sourcesContent":["import { objectAssign } from '../utils/lang/objectAssign';\nimport { find } from '../utils/lang';\nimport { _Map } from '../utils/lang/maps';\nexport var LogLevels = {\n    DEBUG: 'DEBUG',\n    INFO: 'INFO',\n    WARN: 'WARN',\n    ERROR: 'ERROR',\n    NONE: 'NONE'\n};\nvar LogLevelIndexes = {\n    DEBUG: 1,\n    INFO: 2,\n    WARN: 3,\n    ERROR: 4,\n    NONE: 5\n};\nexport function isLogLevelString(str) {\n    return !!find(LogLevels, function (lvl) { return str === lvl; });\n}\n// exported for testing purposes only\nexport function _sprintf(format, args) {\n    if (format === void 0) { format = ''; }\n    if (args === void 0) { args = []; }\n    var i = 0;\n    return format.replace(/%s/g, function () {\n        return args[i++];\n    });\n}\nvar defaultOptions = {\n    prefix: 'splitio',\n    logLevel: LogLevels.NONE,\n    showLevel: true,\n};\nvar Logger = /** @class */ (function () {\n    function Logger(options, codes) {\n        this.options = objectAssign({}, defaultOptions, options);\n        this.codes = codes || new _Map();\n        this.logLevel = LogLevelIndexes[this.options.logLevel];\n    }\n    Logger.prototype.setLogLevel = function (logLevel) {\n        this.options.logLevel = logLevel;\n        this.logLevel = LogLevelIndexes[logLevel];\n    };\n    Logger.prototype.debug = function (msg, args) {\n        if (this._shouldLog(LogLevelIndexes.DEBUG))\n            this._log(LogLevels.DEBUG, msg, args);\n    };\n    Logger.prototype.info = function (msg, args) {\n        if (this._shouldLog(LogLevelIndexes.INFO))\n            this._log(LogLevels.INFO, msg, args);\n    };\n    Logger.prototype.warn = function (msg, args) {\n        if (this._shouldLog(LogLevelIndexes.WARN))\n            this._log(LogLevels.WARN, msg, args);\n    };\n    Logger.prototype.error = function (msg, args) {\n        if (this._shouldLog(LogLevelIndexes.ERROR))\n            this._log(LogLevels.ERROR, msg, args);\n    };\n    Logger.prototype._log = function (level, msg, args) {\n        if (typeof msg === 'number') {\n            var format = this.codes.get(msg);\n            msg = format ? _sprintf(format, args) : \"Message code \" + msg + (args ? ', with args: ' + args.toString() : '');\n        }\n        else {\n            if (args)\n                msg = _sprintf(msg, args);\n        }\n        var formattedText = this._generateLogMessage(level, msg);\n        console.log(formattedText);\n    };\n    Logger.prototype._generateLogMessage = function (level, text) {\n        var textPre = ' => ';\n        var result = '';\n        if (this.options.showLevel) {\n            result += '[' + level + ']' + (level === LogLevels.INFO || level === LogLevels.WARN ? ' ' : '') + ' ';\n        }\n        if (this.options.prefix) {\n            result += this.options.prefix + textPre;\n        }\n        return result += text;\n    };\n    Logger.prototype._shouldLog = function (level) {\n        return level >= this.logLevel;\n    };\n    return Logger;\n}());\nexport { Logger };\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,4BAA4B;AACzD,SAASC,IAAI,QAAQ,eAAe;AACpC,SAASC,IAAI,QAAQ,oBAAoB;AACzC,OAAO,IAAIC,SAAS,GAAG;EACnBC,KAAK,EAAE,OAAO;EACdC,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,OAAO;EACdC,IAAI,EAAE;AACV,CAAC;AACD,IAAIC,eAAe,GAAG;EAClBL,KAAK,EAAE,CAAC;EACRC,IAAI,EAAE,CAAC;EACPC,IAAI,EAAE,CAAC;EACPC,KAAK,EAAE,CAAC;EACRC,IAAI,EAAE;AACV,CAAC;AACD,OAAO,SAASE,gBAAgB,CAACC,GAAG,EAAE;EAClC,OAAO,CAAC,CAACV,IAAI,CAACE,SAAS,EAAE,UAAUS,GAAG,EAAE;IAAE,OAAOD,GAAG,KAAKC,GAAG;EAAE,CAAC,CAAC;AACpE;AACA;AACA,OAAO,SAASC,QAAQ,CAACC,MAAM,EAAEC,IAAI,EAAE;EACnC,IAAID,MAAM,KAAK,KAAK,CAAC,EAAE;IAAEA,MAAM,GAAG,EAAE;EAAE;EACtC,IAAIC,IAAI,KAAK,KAAK,CAAC,EAAE;IAAEA,IAAI,GAAG,EAAE;EAAE;EAClC,IAAIC,CAAC,GAAG,CAAC;EACT,OAAOF,MAAM,CAACG,OAAO,CAAC,KAAK,EAAE,YAAY;IACrC,OAAOF,IAAI,CAACC,CAAC,EAAE,CAAC;EACpB,CAAC,CAAC;AACN;AACA,IAAIE,cAAc,GAAG;EACjBC,MAAM,EAAE,SAAS;EACjBC,QAAQ,EAAEjB,SAAS,CAACK,IAAI;EACxBa,SAAS,EAAE;AACf,CAAC;AACD,IAAIC,MAAM,GAAG,aAAe,YAAY;EACpC,SAASA,MAAM,CAACC,OAAO,EAAEC,KAAK,EAAE;IAC5B,IAAI,CAACD,OAAO,GAAGvB,YAAY,CAAC,CAAC,CAAC,EAAEkB,cAAc,EAAEK,OAAO,CAAC;IACxD,IAAI,CAACC,KAAK,GAAGA,KAAK,IAAI,IAAItB,IAAI,EAAE;IAChC,IAAI,CAACkB,QAAQ,GAAGX,eAAe,CAAC,IAAI,CAACc,OAAO,CAACH,QAAQ,CAAC;EAC1D;EACAE,MAAM,CAACG,SAAS,CAACC,WAAW,GAAG,UAAUN,QAAQ,EAAE;IAC/C,IAAI,CAACG,OAAO,CAACH,QAAQ,GAAGA,QAAQ;IAChC,IAAI,CAACA,QAAQ,GAAGX,eAAe,CAACW,QAAQ,CAAC;EAC7C,CAAC;EACDE,MAAM,CAACG,SAAS,CAACE,KAAK,GAAG,UAAUC,GAAG,EAAEb,IAAI,EAAE;IAC1C,IAAI,IAAI,CAACc,UAAU,CAACpB,eAAe,CAACL,KAAK,CAAC,EACtC,IAAI,CAAC0B,IAAI,CAAC3B,SAAS,CAACC,KAAK,EAAEwB,GAAG,EAAEb,IAAI,CAAC;EAC7C,CAAC;EACDO,MAAM,CAACG,SAAS,CAACM,IAAI,GAAG,UAAUH,GAAG,EAAEb,IAAI,EAAE;IACzC,IAAI,IAAI,CAACc,UAAU,CAACpB,eAAe,CAACJ,IAAI,CAAC,EACrC,IAAI,CAACyB,IAAI,CAAC3B,SAAS,CAACE,IAAI,EAAEuB,GAAG,EAAEb,IAAI,CAAC;EAC5C,CAAC;EACDO,MAAM,CAACG,SAAS,CAACO,IAAI,GAAG,UAAUJ,GAAG,EAAEb,IAAI,EAAE;IACzC,IAAI,IAAI,CAACc,UAAU,CAACpB,eAAe,CAACH,IAAI,CAAC,EACrC,IAAI,CAACwB,IAAI,CAAC3B,SAAS,CAACG,IAAI,EAAEsB,GAAG,EAAEb,IAAI,CAAC;EAC5C,CAAC;EACDO,MAAM,CAACG,SAAS,CAACQ,KAAK,GAAG,UAAUL,GAAG,EAAEb,IAAI,EAAE;IAC1C,IAAI,IAAI,CAACc,UAAU,CAACpB,eAAe,CAACF,KAAK,CAAC,EACtC,IAAI,CAACuB,IAAI,CAAC3B,SAAS,CAACI,KAAK,EAAEqB,GAAG,EAAEb,IAAI,CAAC;EAC7C,CAAC;EACDO,MAAM,CAACG,SAAS,CAACK,IAAI,GAAG,UAAUI,KAAK,EAAEN,GAAG,EAAEb,IAAI,EAAE;IAChD,IAAI,OAAOa,GAAG,KAAK,QAAQ,EAAE;MACzB,IAAId,MAAM,GAAG,IAAI,CAACU,KAAK,CAACW,GAAG,CAACP,GAAG,CAAC;MAChCA,GAAG,GAAGd,MAAM,GAAGD,QAAQ,CAACC,MAAM,EAAEC,IAAI,CAAC,GAAG,eAAe,GAAGa,GAAG,IAAIb,IAAI,GAAG,eAAe,GAAGA,IAAI,CAACqB,QAAQ,EAAE,GAAG,EAAE,CAAC;IACnH,CAAC,MACI;MACD,IAAIrB,IAAI,EACJa,GAAG,GAAGf,QAAQ,CAACe,GAAG,EAAEb,IAAI,CAAC;IACjC;IACA,IAAIsB,aAAa,GAAG,IAAI,CAACC,mBAAmB,CAACJ,KAAK,EAAEN,GAAG,CAAC;IACxDW,OAAO,CAACC,GAAG,CAACH,aAAa,CAAC;EAC9B,CAAC;EACDf,MAAM,CAACG,SAAS,CAACa,mBAAmB,GAAG,UAAUJ,KAAK,EAAEO,IAAI,EAAE;IAC1D,IAAIC,OAAO,GAAG,MAAM;IACpB,IAAIC,MAAM,GAAG,EAAE;IACf,IAAI,IAAI,CAACpB,OAAO,CAACF,SAAS,EAAE;MACxBsB,MAAM,IAAI,GAAG,GAAGT,KAAK,GAAG,GAAG,IAAIA,KAAK,KAAK/B,SAAS,CAACE,IAAI,IAAI6B,KAAK,KAAK/B,SAAS,CAACG,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG;IACzG;IACA,IAAI,IAAI,CAACiB,OAAO,CAACJ,MAAM,EAAE;MACrBwB,MAAM,IAAI,IAAI,CAACpB,OAAO,CAACJ,MAAM,GAAGuB,OAAO;IAC3C;IACA,OAAOC,MAAM,IAAIF,IAAI;EACzB,CAAC;EACDnB,MAAM,CAACG,SAAS,CAACI,UAAU,GAAG,UAAUK,KAAK,EAAE;IAC3C,OAAOA,KAAK,IAAI,IAAI,CAACd,QAAQ;EACjC,CAAC;EACD,OAAOE,MAAM;AACjB,CAAC,EAAG;AACJ,SAASA,MAAM"},"metadata":{},"sourceType":"module"}