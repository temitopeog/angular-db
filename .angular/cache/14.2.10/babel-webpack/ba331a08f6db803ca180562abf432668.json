{"ast":null,"code":"import { objectAssign } from '../utils/lang/objectAssign';\nimport { clientAttributesDecoration } from './clientAttributesDecoration';\n/**\n * Decorator that binds a key and (optionally) a traffic type to client methods\n *\n * @param client sync client instance\n * @param key validated split key\n * @param trafficType validated traffic type\n */\nexport function clientCSDecorator(log, client, key, trafficType) {\n  var clientCS = clientAttributesDecoration(log, client);\n  return objectAssign(clientCS, {\n    // In the client-side API, we bind a key to the client `getTreatment*` methods\n    getTreatment: clientCS.getTreatment.bind(clientCS, key),\n    getTreatmentWithConfig: clientCS.getTreatmentWithConfig.bind(clientCS, key),\n    getTreatments: clientCS.getTreatments.bind(clientCS, key),\n    getTreatmentsWithConfig: clientCS.getTreatmentsWithConfig.bind(clientCS, key),\n    // Key is bound to the `track` method. Same thing happens with trafficType but only if provided\n    track: trafficType ? clientCS.track.bind(clientCS, key, trafficType) : clientCS.track.bind(clientCS, key),\n    isClientSide: true\n  });\n}","map":{"version":3,"names":["objectAssign","clientAttributesDecoration","clientCSDecorator","log","client","key","trafficType","clientCS","getTreatment","bind","getTreatmentWithConfig","getTreatments","getTreatmentsWithConfig","track","isClientSide"],"sources":["/Users/temitopeogunrekun/Desktop/angular-db/node_modules/@splitsoftware/splitio-commons/esm/sdkClient/clientCS.js"],"sourcesContent":["import { objectAssign } from '../utils/lang/objectAssign';\nimport { clientAttributesDecoration } from './clientAttributesDecoration';\n/**\n * Decorator that binds a key and (optionally) a traffic type to client methods\n *\n * @param client sync client instance\n * @param key validated split key\n * @param trafficType validated traffic type\n */\nexport function clientCSDecorator(log, client, key, trafficType) {\n    var clientCS = clientAttributesDecoration(log, client);\n    return objectAssign(clientCS, {\n        // In the client-side API, we bind a key to the client `getTreatment*` methods\n        getTreatment: clientCS.getTreatment.bind(clientCS, key),\n        getTreatmentWithConfig: clientCS.getTreatmentWithConfig.bind(clientCS, key),\n        getTreatments: clientCS.getTreatments.bind(clientCS, key),\n        getTreatmentsWithConfig: clientCS.getTreatmentsWithConfig.bind(clientCS, key),\n        // Key is bound to the `track` method. Same thing happens with trafficType but only if provided\n        track: trafficType ? clientCS.track.bind(clientCS, key, trafficType) : clientCS.track.bind(clientCS, key),\n        isClientSide: true\n    });\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,4BAA4B;AACzD,SAASC,0BAA0B,QAAQ,8BAA8B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,iBAAiB,CAACC,GAAG,EAAEC,MAAM,EAAEC,GAAG,EAAEC,WAAW,EAAE;EAC7D,IAAIC,QAAQ,GAAGN,0BAA0B,CAACE,GAAG,EAAEC,MAAM,CAAC;EACtD,OAAOJ,YAAY,CAACO,QAAQ,EAAE;IAC1B;IACAC,YAAY,EAAED,QAAQ,CAACC,YAAY,CAACC,IAAI,CAACF,QAAQ,EAAEF,GAAG,CAAC;IACvDK,sBAAsB,EAAEH,QAAQ,CAACG,sBAAsB,CAACD,IAAI,CAACF,QAAQ,EAAEF,GAAG,CAAC;IAC3EM,aAAa,EAAEJ,QAAQ,CAACI,aAAa,CAACF,IAAI,CAACF,QAAQ,EAAEF,GAAG,CAAC;IACzDO,uBAAuB,EAAEL,QAAQ,CAACK,uBAAuB,CAACH,IAAI,CAACF,QAAQ,EAAEF,GAAG,CAAC;IAC7E;IACAQ,KAAK,EAAEP,WAAW,GAAGC,QAAQ,CAACM,KAAK,CAACJ,IAAI,CAACF,QAAQ,EAAEF,GAAG,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAACM,KAAK,CAACJ,IAAI,CAACF,QAAQ,EAAEF,GAAG,CAAC;IACzGS,YAAY,EAAE;EAClB,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module"}